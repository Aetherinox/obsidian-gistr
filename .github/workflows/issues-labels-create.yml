# ---------------------------------------------------------------------------------------
#   @parent     : github workflow
#   @desc       : manually activated workflow to create issue labels
#   @author     : Aetherinox
#   @url        : https://github.com/Aetherinox
# ---------------------------------------------------------------------------------------

name: "üé´ Issue ‚Ä∫ Labels ‚Ä∫ Create"
run-name: "üé´ Issue ‚Ä∫ Labels ‚Ä∫ Create"

# ---------------------------------------------------------------------------------------
#   triggers
# ---------------------------------------------------------------------------------------

on:
  workflow_dispatch:
    inputs:

# ---------------------------------------------------------------------------------------
#   environment variables
# ---------------------------------------------------------------------------------------

env:
  LABEL_BUG:            Bug
  LABEL_FEATURE:        Feature
  LABEL_URGENT:         Urgent
  LABEL_ROADMAP:        Roadmap
  ASSIGN_USER:          Aetherinox
  BOT_NAME_1:           AdminServ
  BOT_NAME_2:           AdminServX
  BOT_NAME_DEPENDABOT:  dependabot[bot]
  LABELS_JSON: |
    [
      { "name": "Type/Bug",           "color": "9a2c2c", "description": "Something isn't working" },
      { "name": "Type/Feature",       "color": "F62735", "description": "Feature request" },
      { "name": "Type/Roadmap",       "color": "8F1784", "description": "Feature or bug currently planned for implementation" },
      { "name": "Type/Dependency",    "color": "243759", "description": "Item is associated to dependency" },
      { "name": "Type/Docs",          "color": "0e588d", "description": "Improvements or modifications to docs" },
      { "name": "Type/Git Action",    "color": "030406", "description": "Pull requests that update GitHub Actions code" },
      { "name": "Status/Review",      "color": "6E465A", "description": "This item is currently pending review" },
      { "name": "Status/Released",    "color": "1b6626", "description": "Issues or PR has been implemented and is now live" },
      { "name": "Status/Accepted",    "color": "2e7539", "description": "This pull request has been accepted" },
      { "name": "Status/Review",      "color": "9e1451", "description": "Item is currently pending review" },
      { "name": "Status/Denied",      "color": "ba4058", "description": "Pull request has been denied" },
      { "name": "Status/Need Info",   "color": "2E3C4C", "description": "Not enough information to resolve" },
      { "name": "Status/No Action",   "color": "030406", "description": "This request was closed without any action being taken" },
      { "name": "Status/Pending",     "color": "D5155E", "description": "Pending pull request" },
      { "name": "Status/Reopened",    "color": "B78D03", "description": "A previously closed PR which has been re-opened" },
      { "name": "#Urgent",            "color": "BCE030", "description": "Requires urgent attention" }
    ]

jobs:

  # ---------------------------------------------------------------------------------------
  #   Verify Existing Labels
  #   This job will ensure you have labels already created in your repo.
  #
  #   All labels come from the JSON table LABELS_JSON.
  # ---------------------------------------------------------------------------------------

  issues-labels-create:
    name: ‚öôÔ∏è Labels ‚Ä∫ Create
    runs-on: ubuntu-latest
    steps:

      - name: "‚úÖ Start"
        run: | 
              echo "Assigning labels and assignees"

      - name: "‚òëÔ∏è Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------------------------------------------------------------------------------------
      #   Check if repo has labels currently added to issues
      # ---------------------------------------------------------------------------------------
        
      - name: üè∑Ô∏è Verify Existing Labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
          script: |
            const labels = JSON.parse( process.env.LABELS_JSON );
            for ( const label of labels )
            {
                try
                {
                    await github.rest.issues.createLabel(
                    {
                        owner:        context.repo.owner,
                        repo:         context.repo.repo,
                        name:         label.name,
                        description:  label.description || '',
                        color:        label.color
                    });
                }
                catch ( err )
                {
                    if ( err.status === 422 )
                    {
                        console.log( `Label '${label.name}' already exists. Skipping.` );
                    }
                    else
                    {
                        console.error( `Error creating label '${label.name}': ${err}` );
                    }
                }
            }
  