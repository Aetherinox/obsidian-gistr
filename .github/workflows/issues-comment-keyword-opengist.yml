# ---------------------------------------------------------------------------------------
#   @parent     : github workflow
#   @desc       : checks for certain phrases in an issue title and body
#   @author     : Aetherinox
#   @url        : https://github.com/Aetherinox
# ---------------------------------------------------------------------------------------

  name: "üé´ Issue ‚Ä∫ New ‚Ä∫ Keywords"
  run-name: "üé´ Issue ‚Ä∫ New ‚Ä∫ Keywords - ${{ github.event.issue.number }}: ${{ github.event.issue.title }}"
  
  # ---------------------------------------------------------------------------------------
  #   triggers
  # ---------------------------------------------------------------------------------------
  
  on:
    issues:
      types: [opened]
  
  # ---------------------------------------------------------------------------------------
  #   environment variables
  # ---------------------------------------------------------------------------------------
  
  env:
    ACTION_NAME:  OpenGist
    ASSIGN_USER:  Aetherinox
    BOT_NAME_1:   AdminServ
    BOT_NAME_2:   AdminServX
  
  # ---------------------------------------------------------------------------------------
  #   jobs
  # ---------------------------------------------------------------------------------------
  
  jobs:
  
    # ---------------------------------------------------------------------------------------
    #   Check for keyword "OpenGist"
    # ---------------------------------------------------------------------------------------
  
    phrase-search-opengist:
      name:  "Search Phrase ‚Ä∫ OpenGist"
      runs-on: ubuntu-latest
      permissions: write-all
      steps:
  
        - name: üëÑ Keywords ‚Ä∫ Opengist
          uses: actions/github-script@v7
          with:
            github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
            script: |
              const fs            = require( 'fs' );
              const iss_title     = `${ context.payload.issue.title }`;
              const iss_body      = `${ context.payload.issue.body }`;
              let message         = [ "\n<br />\n" ]
              let bHasMessage     = false
  
              /*********************************************
                  Keyword > OpenGist
              **********************************************/
  
              let OG_message =
              `
              ‚ö†Ô∏è It appears you may be looking for OpenGist help.
              - [Opengist Repo](https://github.com/thomiceli/opengist)
              - [Opengist Docs](https://github.com/thomiceli/opengist/blob/master/docs/index.md)
              - [Opengist Demo](https://opengist.thomice.li/all)
  
              If you are looking for OpenGist support, it will be very minimal. Please utilize the links above.
  
              ---
  
              <sub>I am a bot reaching out to you with an automated response. If the above info doesn't apply to you, please ignore it.</sub>
              `;
  
              /*
                  Check for keyword in message title and body
              */
  
              const OGfindWordList        = /(\s*open\s*-?gist\s*)/ig;
              const OGbFoundMatchTitle    = Boolean( OGfindWordList.test( iss_title ) );
              const OGbFoundMatchBody     = Boolean( OGfindWordList.test( iss_body ) );
  
              /*
                  found searched word "Opengist"
                      append / prepare message for bot to send
              */
  
              if ( OGbFoundMatchTitle || OGbFoundMatchBody )
              {
                  message.push  ( OG_message );
                  bHasMessage   = true;
              }
  
              /*********************************************
                  Keyword > Help
              **********************************************/
  
              let HE_message =
              `
              üí° It appears you might need help, please check the resources below for documentation that might assist with your issue:
              - [Gistr Documentation](https://aetherinox.github.io/obsidian-gistr)
              - [Obsidian Documentation](https://help.obsidian.md/Home)
  
              ---
  
              <sub>I am a bot reaching out to you with an automated response. If the above info doesn't apply to you, please ignore it.</sub>
              `;
  
              /*
                  found searched word "for help"
                      append / prepare message for bot to send
              */
  
              const HEfindWordList 	      = /(\s*have\s*(a|some)?\s*question\s*s?\s*|\s*can\s*you\s*tell\s*me\s*|\s*need\s*help\s*|\s*how\s*(can\s*I|I\s*can)\s*|\s*where\s*(do|can|should)\s*I\s*find\s*|\s*(can(\')?t|can\s*not)\s*find\s*)/ig;
              const HEbFoundMatchTitle    = Boolean( HEfindWordList.test( iss_title ) );
              const HEbFoundMatchBody     = Boolean( HEfindWordList.test( iss_body ) );
  
              if ( HEbFoundMatchTitle || HEbFoundMatchBody )
              {
                message.push  ( HE_message );
                bHasMessage   = true;
              }
              
              /*
                  Bot has message to send
              */
  
              if ( bHasMessage == true )
              {
                  await github.rest.issues.createComment(
                  {
                      issue_number:   context.issue.number,
                      owner:          context.repo.owner,
                      repo:           context.repo.repo,
                      body:           message.join('\n'),
                  } );
              }