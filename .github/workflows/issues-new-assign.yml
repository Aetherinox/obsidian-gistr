# ---------------------------------------------------------------------------------------
#   @parent     : github workflow
#   @desc       : allows you to auto assign labels to new issues and pull requests
#   @author     : Aetherinox
#   @url        : https://github.com/Aetherinox
#
#   requires the following labels to be created in your repo:
#     - bug
#     - feature
#     - urgent
#     - roadmap
# ---------------------------------------------------------------------------------------

name: "üé´ Issue ‚Ä∫ New ‚Ä∫ Assignment"
run-name: "üé´ Issue ‚Ä∫ New ‚Ä∫ Assignment - ${{ github.event.issue.number }}: ${{ github.event.issue.title }}"

# ---------------------------------------------------------------------------------------
#   triggers
# ---------------------------------------------------------------------------------------

on:
  issues:
    types:
      - reopened
      - opened

# ---------------------------------------------------------------------------------------
#   environment variables
# ---------------------------------------------------------------------------------------

env:
  PREFIX_BUG:           "Bug"
  PREFIX_FEATURE:       "Feature"
  PREFIX_ROADMAP:       "Roadmap"
  PREFIX_DEPENDENCY:    "Dependency"
  PREFIX_PR:            "PR"
  PREFIX_DOCS:          "Docs"
  PREFIX_GIT:           "Git Action"
  PREFIX_URGENT:        "Urgent"

  LABEL_BUG:            "Type ‚á¥ Bug"
  LABEL_FEATURE:        "Type ‚á¥ Feature"
  LABEL_ROADMAP:        "Type ‚á¥ Roadmap"
  LABEL_DEPENDENCY:     "Type ‚á¥ Dependency"
  LABEL_PR:             "Type ‚á¥ PR"
  LABEL_DOCS:           "Type ‚á¥ Docs"
  LABEL_GIT:            "Type ‚á¥ Git Action"
  LABEL_URGENT:         "‚ö† Urgent"

  ASSIGN_USER:          Aetherinox
  BOT_NAME_1:           AdminServ
  BOT_NAME_2:           AdminServX
  BOT_NAME_DEPENDABOT:  dependabot[bot]

  LABELS_JSON: |
    [
      { "name": "Type ‚á¥ Bug", "color": "d73a4a", "description": "Something isn't working" },
      { "name": "Type ‚á¥ Feature", "color": "36552B", "description": "Feature request" },
      { "name": "Type ‚á¥ Urgent", "color": "ccb11d", "description": "This issue required priority." },
      { "name": "Type ‚á¥ Roadmap", "color": "8F1784", "description": "Feature or bug currently planned for implementation." }
    ]

jobs:

  # ---------------------------------------------------------------------------------------
  #   Verify Existing Labels
  #   This job will ensure you have labels already created in your repo.
  #
  #   All labels come from the JSON table LABELS_JSON.
  # ---------------------------------------------------------------------------------------

  issues-preconfig-labels:
    name: ‚öôÔ∏è Labels ‚Ä∫ Preconfigure
    runs-on: ubuntu-latest
    steps:

      - name: "‚úÖ Start"
        run: | 
              echo "Assigning labels and assignees"

      - name: "‚òëÔ∏è Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------------------------------------------------------------------------------------
      #   Check if repo has labels currently added to issues
      # ---------------------------------------------------------------------------------------
        
      - name: üè∑Ô∏è Verify Existing Labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = JSON.parse( process.env.LABELS_JSON );
            for ( const label of labels )
            {
                try
                {
                    await github.rest.issues.createLabel(
                    {
                        owner:        context.repo.owner,
                        repo:         context.repo.repo,
                        name:         label.name,
                        description:  label.description || '',
                        color:        label.color
                    });
                }
                catch ( err )
                {
                    if ( err.status === 422 )
                    {
                        console.log( `Label '${label.name}' already exists. Skipping.` );
                    }
                    else
                    {
                        console.error( `Error creating label '${label.name}': ${err}` );
                    }
                }
            }

  # ---------------------------------------------------------------------------------------
  #   Issues > Assign Labels
  # ---------------------------------------------------------------------------------------

  issues-assign-labels:
    name: >-
      üè∑Ô∏è Labels ‚Ä∫ Assign
    needs:
    - issues-preconfig-labels
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      issues: 'write'
    environment:
      name: Orion
    steps:


      # ---------------------------------------------------------------------------------------
      #   Get Issue Title
      # ---------------------------------------------------------------------------------------

      - name: üè∑Ô∏è Get Issue Title
        uses: actions/github-script@v7
        id: label_issues_initialize
        with:
          github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
          script: |

            let iss_title   = `${ context.payload.issue.title }`;

            core.setOutput( 'issue_title', iss_title )
            core.info( `Setting env issue title: ${ iss_title }` )

            console.log( "\n\n" )
            

      # ---------------------------------------------------------------------------------------
      #   Label > Bug
      # ---------------------------------------------------------------------------------------

      - name: üè∑Ô∏è ${{ env.PREFIX_BUG }} ‚Ä∫ Assignment
        uses: actions/github-script@v7
        id: label_issues_bug
        with:
          github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
          script: |

            const issueLabels = await github.rest.issues.listLabelsOnIssue(
            {
                owner:            context.repo.owner,
                repo:             context.repo.repo,
                issue_number:     context.issue.number
            });

            let add_labels              = issueLabels.data.map( label => label.name );

            let iss_title               = `${{ steps.label_issues_initialize.outputs.issue_title }}` || `${ context.payload.issue.title }`;
            let iss_body                = `${ context.payload.issue.body }`;

            const iss_title_lc          = iss_title.toLowerCase( );

            console.log( "Feat Title .................... " + iss_title )
            console.log( "Feat Output ................... " + `${{ steps.label_issues_initialize.outputs.issue_title }}` )
            console.log( "Feat Payload .................. " + `${ context.payload.issue.title }` )

            /*
                Tags
            */

            const bug_tag               = `${{ env.PREFIX_BUG }}:`;
            const bug_lbl               = `${{ env.LABEL_BUG }}`;
            const feat_tag              = `${{ env.PREFIX_FEATURE }}:`;
            const feat_lbl              = `${{ env.LABEL_FEATURE }}`;
            const urgn_tag              = `${{ env.PREFIX_URGENT }}:`;
            const urgn_lbl              = `${{ env.LABEL_URGENT }}`;
            const road_tag              = `${{ env.PREFIX_ROADMAP }}:`;
            const road_lbl              = `${{ env.LABEL_ROADMAP }}`;

            /*
                Bugs
            */

            const words                 = [ "bug", "broke", "issue", "fail" ];
            const bIncWordT             = words.some( s => s.includes( iss_title_lc ) || iss_title_lc.includes( s ) );

            /*
                found searched word "for help"
                    append / prepare message for bot to send
            */

            const findWordList 	        = /(?:I?\s*have\s*(?:a|an)\s*(?:issue|problem|bug))|(?:will\s*not\s*work)|(?:it\s*is\s*(?:broken|broke|stuck))|(?:found\s*(?:an?|the)\s*(?:bug|issue))|(?:can\s*I\s*fix\s*the\s*(?:bug|issue))|(?:(?:does not|doesn'?t|don'?t|won'?t|can'?t|can\s?not|will\s*not)\s*(?:work|load|function))|(?:it\s*(?:will\s?not|won'?t|can\s?not|can'?t))\s*get\s*the\s*(?:website|site|webpage|page)|(?:the\s*(?:window|frame)\s*is\s*(?:blank|white|empty|missing))/igm;
            const bFoundMatchTitle      = Boolean( findWordList.test( iss_title ) );
            const bFoundMatchBody       = Boolean( findWordList.test( iss_body ) );

            /*
                Do not change a title if the item starts with a PR: #
            */

            const findPRTitle           = /^PR\s(?:[0-9]*:?)/igm;
            const bFoundPRTitle         = Boolean( findWordList.test( iss_title ) );

            console.log( "Title Lowercase ............... " + iss_title_lc  )
            console.log( "Startswith " + bug_tag.toLowerCase( ) + "................ " + iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) )
            console.log( "Title Includes Keyword ........ " + bIncWordT  )
            console.log( "Title Includes Regex .......... " + bFoundMatchTitle  )
            console.log( "Body Includes Regex ........... " + bFoundMatchBody  )
            console.log( "\n" )

            /*
                - Check if issue title matches the issue label "Bug:"
                - Check if title contains word in words 
            */

            if ( iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) || bIncWordT || bFoundMatchTitle || bFoundMatchBody )
            {

                console.log( "‚ö†Ô∏è " + bug_tag + " ---------------------------------------" )
                console.log( "Already starts with " + bug_tag + " ......... " + iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + feat_tag + " ..... " + iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + urgn_tag + " ...... " + iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + road_tag + " ..... " + iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )

                add_labels.push( `${ bug_lbl }` );
                
                console.log( `Adding Tag ....................... ${ bug_lbl }` )
                console.log( "\n" )

                // Rename title to contain Bug:
                // Make sure issue / pr title doesnt already contain a beginning title tag

                if ( !bFoundPRTitle && !iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )
                {
                    console.log( "Renaming Title" )
                    console.log( `Old Title: .................. ${ iss_title }` )

                    const title           = context.payload.issue.title
                    let title_new         = title.replace( /^\s?bug\s*(.*?)\b/gi, '' );
                    title_new         		= title.replace( /^\s?fail\s*(.*?)\b/gi, '' );
                    title_new         		= title.replace( /^\s?issue\s*(.*?)\b/gi, '' );
                    iss_title             = `${ bug_tag } ${ title_new }`;
                }

                console.log( `New Title: ...................... ${ iss_title }` )

                await github.rest.issues.update(
                {
                    owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number,
                    title: `${ iss_title }`, labels: add_labels
                } );
            }

            core.setOutput( 'issue_title', iss_title )
            console.log( "\n\n" )
            
      # ---------------------------------------------------------------------------------------
      #   Label > FEATURE
      # ---------------------------------------------------------------------------------------

      - name: üè∑Ô∏è ${{ env.PREFIX_FEATURE }} ‚Ä∫ Assignment
        uses: actions/github-script@v7
        id: label_issues_feature
        with:
          github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
          script: |

            const issueLabels = await github.rest.issues.listLabelsOnIssue(
            {
                owner:            context.repo.owner,
                repo:             context.repo.repo,
                issue_number:     context.issue.number
            });

            let add_labels              = issueLabels.data.map( label => label.name );

            let iss_title               = `${{ steps.label_issues_bug.outputs.issue_title }}` || `${ context.payload.issue.title }`;
            let iss_body                = `${ context.payload.issue.body }`;

            const iss_title_lc          = iss_title.toLowerCase( );

            console.log( "Feat Title .................... " + iss_title )
            console.log( "Feat Output ................... " + `${{ steps.label_issues_bug.outputs.issue_title }}` )
            console.log( "Feat Payload .................. " + `${ context.payload.issue.title }` )

            /*
                Tags
            */

            const bug_tag               = `${{ env.PREFIX_BUG }}:`;
            const bug_lbl               = `${{ env.LABEL_BUG }}`;
            const feat_tag              = `${{ env.PREFIX_FEATURE }}:`;
            const feat_lbl              = `${{ env.LABEL_FEATURE }}`;
            const urgn_tag              = `${{ env.PREFIX_URGENT }}:`;
            const urgn_lbl              = `${{ env.LABEL_URGENT }}`;
            const road_tag              = `${{ env.PREFIX_ROADMAP }}:`;
            const road_lbl              = `${{ env.LABEL_ROADMAP }}`;

            /*
                Features
            */

            const words                 = [ "feature", "request", "add support" ];
            const bIncWordT             = words.some( s => s.includes( iss_title_lc ) || iss_title_lc.includes( s ) );

            /*
                Find regex based phrases
            */

            const findWordList 	        = /(?:(?:request|include|see)\s*(?:a?|the?)\s*(?:feature|addon|addition|plugin))|(?:(?:add|see|get)\s*support\s*(?:for|with|of))/igm;
            const bFoundMatchTitle      = Boolean( findWordList.test( iss_title ) );
            const bFoundMatchBody       = Boolean( findWordList.test( iss_body ) );

            /*
                Do not change a title if the item starts with a PR: #
            */

            const findPRTitle           = /^PR\s(?:[0-9]*:?)/igm;
            const bFoundPRTitle         = Boolean( findWordList.test( iss_title ) );

            console.log( "Title Lowercase ............... " + iss_title_lc  )
            console.log( "Startswith " + feat_tag.toLowerCase( ) + "............ " + iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) )
            console.log( "Title Includes Keyword ........ " + bIncWordT  )
            console.log( "Title Includes Regex .......... " + bFoundMatchTitle  )
            console.log( "Body Includes Regex ........... " + bFoundMatchBody  )
            console.log( "\n" )

            /*
                - Check if issue title matches the issue label "Feature:"
                - Check if title contains word in words 
            */

            // change TAG per category
            if ( iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) || bIncWordT || bFoundMatchTitle || bFoundMatchBody )
            {

                console.log( "‚ö†Ô∏è " + feat_tag + " ---------------------------------------" )
                console.log( "Already starts with " + bug_tag + " ......... " + iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + feat_tag + " ..... " + iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + urgn_tag + " ...... " + iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + road_tag + " ..... " + iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )

                // change LBL per category
                add_labels.push( `${ feat_lbl }` );

                console.log( `Adding Tag ....................... ${ feat_lbl }` )
                console.log( "\n" )

                // Rename title to contain Feature:
                // Make sure issue / pr title doesnt already contain a beginning title tag

                if ( !bFoundPRTitle && !iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )
                {
                    console.log( "Renaming Title" )
                    console.log( `Old Title: .................. ${ iss_title }` )

                    const title           = context.payload.issue.title
                    let title_new         = title.replace( /^\s?feature\s*(.*?)\b/gi, '' );
                    title_new             = title.replace( /^\s?request\s*(.*?)\b/gi, '' );
                    title_new             = title.replace( /^\s?add(.*?)\s?feature\s*(.*?)\b/gi, '' );
                    title_new             = title.replace( /^\s?add(.*?)\s?support\s*(.*?)\b/gi, '' );
                    iss_title             = `${ feat_tag } ${ title_new }`; // change TAG per category
                }

                console.log( `New Title: ...................... ${ iss_title }` )

                await github.rest.issues.update(
                {
                    owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number,
                    title: `${ iss_title }`, labels: add_labels
                } );
            }

            core.setOutput( 'issue_title', iss_title )
            console.log( "\n\n" )

      # ---------------------------------------------------------------------------------------
      #   Label > URGENT
      # ---------------------------------------------------------------------------------------

      - name: üè∑Ô∏è ${{ env.PREFIX_URGENT }} ‚Ä∫ Assignment
        uses: actions/github-script@v7
        id: label_issues_urgent
        with:
          github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
          script: |

            const issueLabels = await github.rest.issues.listLabelsOnIssue(
            {
                owner:            context.repo.owner,
                repo:             context.repo.repo,
                issue_number:     context.issue.number
            });

            let add_labels              = issueLabels.data.map( label => label.name );

            let iss_title               = `${{ steps.label_issues_feature.outputs.issue_title }}` || `${ context.payload.issue.title }`;
            let iss_body                = `${ context.payload.issue.body }`;

            const iss_title_lc          = iss_title.toLowerCase( );

            console.log( "Urgn Title .................... " + iss_title )
            console.log( "Urgn Output ................... " + `${{ steps.label_issues_feature.outputs.issue_title }}` )
            console.log( "Urgn Payload .................. " + `${ context.payload.issue.title }` )

            /*
                Tags
            */

            const bug_tag               = `${{ env.PREFIX_BUG }}:`;
            const bug_lbl               = `${{ env.LABEL_BUG }}`;
            const feat_tag              = `${{ env.PREFIX_FEATURE }}:`;
            const feat_lbl              = `${{ env.LABEL_FEATURE }}`;
            const urgn_tag              = `${{ env.PREFIX_URGENT }}:`;
            const urgn_lbl              = `${{ env.LABEL_URGENT }}`;
            const road_tag              = `${{ env.PREFIX_ROADMAP }}:`;
            const road_lbl              = `${{ env.LABEL_ROADMAP }}`;

            /*
                Urgent
            */

            const words                 = [ "urgent", "urgency", "emergency", "important", "critical" ];
            const bIncWordT             = words.some( s => s.includes( iss_title_lc ) || iss_title_lc.includes( s ) );

            /*
                Find regex based phrases
            */

            const findWordList 	        = /(?:(?:this)?is\s*a?n?\s*?(?:emergency|urgent|important|vital|acute|crucial|grave|pressing|serious|top.?priority|high.?priority))|(?:reply|respond|answer|write|address)\s*(?:immediate|quick|asap|urgent|now|fast|(?:as)?\s*(?:soon|quick|immediate|fast))(?:ly)?|(?:need\s*(?:help|support|fixed|answer|reply|response)!)/igm;
            const bFoundMatchTitle      = Boolean( findWordList.test( iss_title ) );
            const bFoundMatchBody       = Boolean( findWordList.test( iss_body ) );

            /*
                Do not change a title if the item starts with a PR: #
            */

            const findPRTitle           = /^PR\s(?:[0-9]*:?)/igm;
            const bFoundPRTitle         = Boolean( findWordList.test( iss_title ) );

            console.log( "Title Lowercase ............... " + iss_title_lc  )
            console.log( "Startswith " + urgn_tag.toLowerCase( ) + "............. " + iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) )
            console.log( "Title Includes Keyword ........ " + bIncWordT  )
            console.log( "Title Includes Regex .......... " + bFoundMatchTitle  )
            console.log( "Body Includes Regex ........... " + bFoundMatchBody  )
            console.log( "\n" )

            /*
                - Check if issue title matches the issue label "Urgent:"
                - Check if title contains word in words 
            */

            // change TAG per category
            if ( iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) || bIncWordT || bFoundMatchTitle || bFoundMatchBody )
            {

                console.log( "‚ö†Ô∏è " + urgn_tag + " ---------------------------------------" )
                console.log( "Already starts with " + bug_tag + " ......... " + iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + feat_tag + " ..... " + iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + urgn_tag + " ...... " + iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + road_tag + " ..... " + iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )

                // change LBL per category
                add_labels.push( `${ urgn_lbl }` );

                console.log( `Adding Tag ....................... ${ urgn_lbl }` )
                console.log( "\n" )

                // Rename title to contain Urgent:
                // Make sure issue / pr title doesnt already contain a beginning title tag

                if ( !bFoundPRTitle && !iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )
                {
                    console.log( "Renaming Title" )
                    console.log( `Old Title: .................. ${ iss_title }` )

                    const title           = context.payload.issue.title
                    let title_new         = title.replace( /^\s?emergency\s*(.*?)\b/gi, '' );
                    title_new             = title.replace( /^\s?urgent\s*(.*?)\b/gi, '' );
                    title_new             = title.replace( /^\s?urgency\s*(.*?)\b/gi, '' );
                    title_new             = title.replace( /^\s?important\s*(.*?)\b/gi, '' );
                    title_new             = title.replace( /^\s?critical\s*(.*?)\b/gi, '' );
                    iss_title             = `${ urgn_tag } ${ title_new }`; // change TAG per category
                }

                console.log( `New Title: ...................... ${ iss_title }` )

                await github.rest.issues.update(
                {
                    owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number,
                    title: `${ iss_title }`, labels: add_labels
                } );
            }

            core.setOutput( 'issue_title', iss_title )
            console.log( "\n\n" )

      # ---------------------------------------------------------------------------------------
      #   Label > ROADMAP
      # ---------------------------------------------------------------------------------------

      - name: üè∑Ô∏è ${{ env.PREFIX_ROADMAP }} ‚Ä∫ Assignment
        uses: actions/github-script@v7
        id: label_issues_roadmap
        with:
          github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
          script: |

            const issueLabels = await github.rest.issues.listLabelsOnIssue(
            {
                owner:            context.repo.owner,
                repo:             context.repo.repo,
                issue_number:     context.issue.number
            });

            let add_labels              = issueLabels.data.map( label => label.name );

            let iss_title               = `${{ steps.label_issues_urgent.outputs.issue_title }}` || `${ context.payload.issue.title }`;
            let iss_body                = `${ context.payload.issue.body }`;

            const iss_title_lc          = iss_title.toLowerCase( );

            console.log( "Road Title .................... " + iss_title )
            console.log( "Road Output ................... " + `${{ steps.label_issues_urgent.outputs.issue_title }}` )
            console.log( "Road Payload .................. " + `${ context.payload.issue.title }` )

            /*
                Tags
            */

            const bug_tag               = `${{ env.PREFIX_BUG }}:`;
            const bug_lbl               = `${{ env.LABEL_BUG }}`;
            const feat_tag              = `${{ env.PREFIX_FEATURE }}:`;
            const feat_lbl              = `${{ env.LABEL_FEATURE }}`;
            const urgn_tag              = `${{ env.PREFIX_URGENT }}:`;
            const urgn_lbl              = `${{ env.LABEL_URGENT }}`;
            const road_tag              = `${{ env.PREFIX_ROADMAP }}:`;
            const road_lbl              = `${{ env.LABEL_ROADMAP }}`;

            /*
                Roadmap
            */

            const words                 = [ "roadmap", "road map", "planned" ];
            const bIncWordT             = words.some( s => s.includes( iss_title_lc ) || iss_title_lc.includes( s ) );

            /*
                Find regex based phrases
            */

            const findWordList 	        = /#\s*Summary[\S\s]+#\s*(?:Proposal|Objective)[^\]]+/igm;
            const bFoundMatchTitle      = Boolean( findWordList.test( iss_title ) );
            const bFoundMatchBody       = Boolean( findWordList.test( iss_body ) );

            /*
                Do not change a title if the item starts with a PR: #
            */

            const findPRTitle           = /^PR\s(?:[0-9]*:?)/igm;
            const bFoundPRTitle         = Boolean( findWordList.test( iss_title ) );

            console.log( "Title Lowercase ............... " + iss_title_lc  )
            console.log( "Startswith " + road_tag.toLowerCase( ) + "............ " + iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )
            console.log( "Title Includes Keyword ........ " + bIncWordT  )
            console.log( "Title Includes Regex .......... " + bFoundMatchTitle  )
            console.log( "Body Includes Regex ........... " + bFoundMatchBody  )
            console.log( "\n" )

            /*
                - Check if issue title matches the issue label "Roadmap:"
                - Check if title contains word in words 
            */

            // change TAG per category
            if ( iss_title_lc.startsWith( road_tag.toLowerCase( ) ) || bIncWordT || bFoundMatchTitle || bFoundMatchBody )
            {

                console.log( "‚ö†Ô∏è " + road_tag + " ---------------------------------------" )
                console.log( "Already starts with " + bug_tag + " ...... " + iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + feat_tag + " .. " + iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + urgn_tag + " ... " + iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) )
                console.log( "Already starts with " + road_tag + " .. " + iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )

                // change LBL per category
                add_labels.push( `${ road_lbl }` );

                console.log( `Adding Tag .................... ${ road_lbl }` )
                console.log( "\n" )

                // Rename title to contain Roadmap:
                // Make sure issue / pr title doesnt already contain a beginning title tag

                if ( !bFoundPRTitle && !iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )
                {
                    console.log( "Renaming Title" )
                    console.log( `Old Title: .................. ${ iss_title }` )

                    const title           = context.payload.issue.title
                    let title_new         = title.replace( /^\s?broad(.*?)\s?map\s*(.*?)\b/gi, '' );
                    title_new         		= title.replace( /^\s?planned\s*(.*?)\b/gi, '' );
                    title_new         		= title.replace( /^\s?broadmap\s*(.*?)\b/gi, '' );
                    iss_title             = `${ road_tag } ${ title_new }`; // change TAG per category
                }

                console.log( `New Title: .................... ${ iss_title }` )

                await github.rest.issues.update(
                {
                    owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number,
                    title: `${ iss_title }`, labels: add_labels
                } );
            }

            core.setOutput( 'issue_title', iss_title )
            console.log( "\n\n" )

  # ---------------------------------------------------------------------------------------
  #   Issues > Add Assignees
  # ---------------------------------------------------------------------------------------

  issues-assign-assignees:
    name: >-
      ‚úçÔ∏è Issue ‚Ä∫ Assign
    runs-on: ubuntu-latest
    needs: [ issues-assign-labels ]
    if: |
      always()
      && contains( needs.*.result, 'success' )
      && !contains( needs.*.result, 'failure' )
    permissions:
      contents: write
    steps:

      - name: ‚úçÔ∏è Set Assignees
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ADMINSERV_TOKEN_CL }}
          script: |
            const assignees = [ 'Aetherinox' ];

            if ( assignees.length > 0 )
            {
                try
                {
                    await github.rest.issues.addAssignees(
                    {
                        issue_number:   context.issue.number,
                        owner:          context.repo.owner,
                        repo:           context.repo.repo,
                        assignees
                    });
                }
                catch ( error )
                {
                    core.setFailed( error.message );
                }
            }
  