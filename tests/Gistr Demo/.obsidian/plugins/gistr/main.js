/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var obsidian = require('obsidian');

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

/*
    @locale     : English (en)
*/
var en = {
    /*
        Tab > Settings > Header
    */
    cfg_modal_title: 'Gistr - Gist Integration',
    cfg_modal_desc: 'The Gistr plugin allows you to embed OpenGist and Github Gist snippets within your Obsidian notes.',
    /*
        Tab > Settings > General
    */
    cfg_tab_ge_title: 'General Settings',
    cfg_tab_ge_header: 'General settings for Gistr.',
    cfg_tab_og_title: 'OpenGist Settings',
    cfg_tab_og_header: 'Opengist is a self-hosted pastebin powered by Git. All snippets are stored in a Git repository and can be read and/or modified using standard Git commands, or with the web interface. It is similiar to GitHub Gist, but open-source and is self-hosted. OpenGist supports Windows, Linux, and MacOS.',
    cfg_tab_gh_title: 'Github Settings',
    cfg_tab_gh_header: 'Github Gists let you store and distribute code snippets without setting up a full-fledged repository. Store snippets such as strings, bash scripts, markdown, text files, and other small pieces of data.',
    cfg_tab_sp_title: 'Support',
    cfg_tab_ge_keyword_name: 'Trigger Keyword',
    cfg_tab_ge_keyword_desc: 'Word to use inside codeblocks to designate as a portal for showing gists',
    /*
        Tab > Settings > OpenGist
    */
    cfg_tab_og_cblk_light_name: 'Codeblock Background Color (Light)',
    cfg_tab_og_cblk_light_desc: 'Color for Opengist codeblock background color (Light Theme)',
    cfg_tab_og_cblk_dark_name: 'Codeblock Background Color (Dark)',
    cfg_tab_og_cblk_dark_desc: 'Color for Opengist codeblock background color (Dark Theme)',
    cfg_tab_og_sb_light_name: 'Scrollbar Track Color (Light)',
    cfg_tab_og_sb_light_desc: 'Color for gist scrollbar track (Light Theme)',
    cfg_tab_og_sb_dark_name: 'Scrollbar Track Color (Dark)',
    cfg_tab_og_sb_dark_desc: 'Color for gist scrollbar track (Dark Theme)',
    cfg_tab_og_padding_top_name: 'Top Padding',
    cfg_tab_og_padding_top_desc: 'Padding between gist codeblock header and code.',
    cfg_tab_og_padding_bottom_name: 'Bottom Padding',
    cfg_tab_og_padding_bottom_desc: 'Padding between gist codeblock and the bottom scrollbar.',
    cfg_tab_og_theme_name: 'Color Theme',
    cfg_tab_og_theme_desc: 'This determines what color scheme will be used when loading an OpenGist code block. MUST reload your note for the new stylesheet to be loaded.',
    cfg_tab_og_css_name: 'Custom CSS',
    cfg_tab_og_css_desc: 'Paste CSS properties to override existing colors.',
    cfg_tab_og_css_pholder: 'Paste CSS here',
    /*
        Tab > Settings > Github
    */
    cfg_tab_gh_css_name: 'Custom CSS',
    cfg_tab_gh_css_desc: 'Paste CSS properties to override existing colors.',
    cfg_tab_gh_css_pholder: 'Paste CSS here',
    /*
        Tab > Settings > Support
    */
    cfg_tab_su_desc: 'The following buttons are associated to useful resources for this plugin.',
    cfg_tab_su_gs_name: 'Getting Started',
    cfg_tab_su_gs_desc: 'View brief introduction to getting started with this plugin',
    cfg_tab_su_gs_btn: 'Open',
    cfg_tab_su_repo_label: 'Plugin Repo',
    cfg_tab_su_repo_url: 'https://github.com/Aetherinox/obsidian-gistr',
    cfg_tab_su_repo_btn: 'View',
    cfg_tab_su_ogrepo_label: 'OpenGist: Download',
    cfg_tab_su_ogrepo_url: 'https://github.com/thomiceli/opengist/releases',
    cfg_tab_su_ogrepo_btn: 'View',
    cfg_tab_su_ogdocs_label: 'OpenGist: Docs',
    cfg_tab_su_ogdocs_url: 'https://github.com/thomiceli/opengist/blob/master/docs/index.md',
    cfg_tab_su_ogdocs_btn: 'View',
    cfg_tab_su_ogdemo_label: 'OpenGist: Demo',
    cfg_tab_su_ogdemo_url: 'https://opengist.thomice.li/all',
    cfg_tab_su_ogdemo_btn: 'View',
    cfg_tab_su_gist_label: 'Github Gist',
    cfg_tab_su_gist_url: 'https://gist.github.com/',
    cfg_tab_su_gist_btn: 'View',
    /*
        Getting Started
    */
    gs_base_header: 'This plugin allows you to integrate both OpenGist and Github Gist pastes within your Obsidian notes. To use this plugin, you can either create a new Github gist, or setup your own OpenGist server. OpenGist is free, and takes only minutes to configure.',
    gs_og_btn_repo: 'Download OpenGist',
    gs_og_btn_docs: 'OpenGist Docs',
    gs_og_sub_1: 'Once you install and set up OpenGist, you can sign in to your OpenGist website and create your first Gist. After your Gist is created, return to your Obsidian node, and integrate your Gist into your note using code similar to the following:',
    gs_og_name: 'OpenGist Integration',
    gs_og_desc: 'OpenGist supports Windows, Linux, MacOS, and Docker. To download and set up OpenGist, click below.',
    gs_gh_name: 'Github Gists',
    gs_gh_desc: 'To paste a Github Gist into your note, use a command similar to the following examples:',
    gs_btn_settings_open: 'Open Settings',
    gs_btn_close: 'Close',
    base_underdev_title: 'Feature Under Development',
    base_underdev_msg: 'I am currently working with the developer of OpenGist to make minor changes to how OpenGist pastes appear, including moving the "view raw" button to the bottom so that Obsidian\'s edit button does not overlap.',
    /*
        Gist Load Error
    */
    err_gist_loading_fail_name: '⚠️ Gistr: Failed to load gist:',
    err_gist_loading_fail_resp: '{0}',
    err_gist_loading_fail_detail: 'Could not load a valid Javascript from gist url: {0}',
    err_gist_loading_fail_url: 'Could not find gist id -- Make sure correct URL is specified. {0}',
};

/*
    Languages Helper
*/
/*
    get plugin name
*/
function PluginID() {
    return 'gistr';
}
/*
    Language entries
*/
const SetupLocale = {
    en,
};
/*
    get locale val
*/
const locale = SetupLocale[obsidian.moment.locale()];
/*
    Language Method
*/
function lng(item, ...args) {
    if (!locale)
        console.error("Gistr language not found", obsidian.moment.locale());
    let val = (locale && locale[item]) || en[item];
    return val.replace(/{(\d+)}/g, (match, index) => {
        const replace = args[index];
        return typeof replace !== 'undefined' ? replace : match;
    });
}

let nanoid = (size = 21) =>
  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {
    byte &= 63;
    if (byte < 36) {
      id += byte.toString(36);
    } else if (byte < 62) {
      id += (byte - 26).toString(36).toUpperCase();
    } else if (byte > 62) {
      id += '-';
    } else {
      id += '_';
    }
    return id
  }, '');

/*
    Import
*/
/*
    Basic Declrations
*/
const PID = PluginID();
const AppBase = 'app://obsidian.md';
/*
    Gistr Backend
*/
class GistrBackend {
    constructor(settings) {
        /*
            Collect message data from JS_EventListener
        */
        this.messageEventHandler = (evn) => {
            if (evn.origin !== 'null')
                return;
            if (evn.data.sender !== PID)
                return;
            const uuid = evn.data.gid;
            const scrollHeight = evn.data.scrollHeight;
            const gist_Container = document.querySelector('iframe#' + uuid);
            gist_Container.setAttribute('height', scrollHeight);
        };
        /*
            Event processor
        */
        this.processor = (src, el) => __awaiter(this, void 0, void 0, function* () {
            const obj = src.trim().split("\n");
            return Promise.all(obj.map((gist) => __awaiter(this, void 0, void 0, function* () {
                return this.GistHandle(el, gist);
            })));
        });
        this.settings = settings;
    }
    /*
        Gist > Handle
    */
    GistHandle(el, data) {
        return __awaiter(this, void 0, void 0, function* () {
            const pattern = /(?<protocol>https?:\/\/)?(?<host>[^/]+\/)?((?<username>[\w-]+)\/)?(?<uuid>\w+)(\#(?<filename>.+))?/;
            const find = data.match(pattern).groups;
            const host = find.host;
            const username = find.username;
            const uuid = find.uuid;
            const file = find.filename;
            /*
                Since opengist can really be any website, check for matching github links
            */
            const bMatchGithub = /((https?:\/\/)?(.+?\.)?github\.com(\/[A-Za-z0-9\-\._~:\/\?#\[\]@!$&'\(\)\*\+,;\=]*)?)/g.test(host);
            /*
                No UUID match
            */
            if (typeof uuid === undefined)
                return this.ThrowError(el, data, lng("err_gist_loading_fail_url", host));
            /*
                compile url to gist
            */
            let gistSrcURL = (file !== undefined ? `https://${host}${username}/${uuid}.json?file=${file}` : `https://${host}${username}/${uuid}.json`);
            let og_ThemeOV = (bMatchGithub == false && file !== undefined) ? file : "";
            const reqUrlParams = { url: gistSrcURL, method: "GET", headers: { "Accept": "application/json" } };
            try {
                const req = yield obsidian.request(reqUrlParams);
                const json = JSON.parse(req);
                return this.GistGenerate(el, host, uuid, json, bMatchGithub, og_ThemeOV);
            }
            catch (err) {
                return this.ThrowError(el, data, `Invalid gist url ${gistSrcURL} ( ${err} )`);
            }
        });
    }
    /*
        Gist > Generate

        create new iframe for each gist, assign it a uid, set the needed attributes, and generate the css, js
    */
    EventListener(uuid) {
        return `
        <script>
            window.addEventListener( 'load', ( ) =>
            {
                window.top.postMessage(
                {
                    sender:         '${PID}',
                    gid:            '${uuid}',
                    scrollHeight:   document.body.scrollHeight
                }, '${AppBase}')
            } )
        </script>
        `;
    }
    /*
        Gist > Generate

        create new iframe for each gist, assign it a uid, set the needed attributes, and generate the css, js
    */
    GistGenerate(el, host, uuid, json, bGithub, themeovr) {
        return __awaiter(this, void 0, void 0, function* () {
            /*
                create uuid and iframe
            */
            const gid = `${PID}-${uuid}-${nanoid()}`;
            const ct_iframe = document.createElement('iframe');
            ct_iframe.id = gid;
            ct_iframe.classList.add(`${PID}-container`);
            if (bGithub === true)
                ct_iframe.classList.add(`full-dark-gist`);
            ct_iframe.setAttribute('sandbox', 'allow-scripts allow-popups allow-popups-to-escape-sandbox allow-top-navigation-by-user-activation');
            ct_iframe.setAttribute('loading', 'lazy');
            ct_iframe.setAttribute('width', '100%');
            /*
                https://fonts.googleapis.com
    
                policy directive error if certain attributes arent used. doesnt affect the plugin, but erors are bad
            */
            ct_iframe.setAttribute('csp', "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' ${host} ;");
            /*
                assign css, body, js
            */
            // returns either "" blank OR "File"    Only for OpenGist
            let css_theme_ovr = (themeovr !== "") ? themeovr.toLowerCase() : "";
            let css_theme_sel = (css_theme_ovr !== "") ? css_theme_ovr :
                (this.settings.theme == "Dark") ? "dark" :
                    (this.settings.theme == "Light") ? "light" : "light";
            console.log(css_theme_sel);
            const content_css = yield this.GetCSS(el, uuid, (bGithub ? json.stylesheet : json.embed.css));
            const content_body = (bGithub ? json.div : "");
            const content_js = (bGithub ? "" : yield this.GetJavascript(el, uuid, (css_theme_sel == "dark" ? json.embed.js_dark : json.embed.js)));
            const css_bg_color = (css_theme_sel == "dark" ? this.settings.og_clr_bg_dark : this.settings.og_clr_bg_light);
            const css_sb_color = (css_theme_sel == "dark" ? this.settings.og_clr_sb_dark : this.settings.og_clr_sb_light);
            const css_bg_og_header_bg = (css_theme_sel == "dark" ? "rgb(35 36 41/var(--tw-bg-opacity))" : "rgb(238 239 241/var(--tw-bg-opacity))");
            const css_bg_og_header_bor = (css_theme_sel == "dark" ? "1px solid rgb(54 56 64/var(--tw-border-opacity))" : "rgb(222 223 227/var(--tw-border-opacity))");
            let css_og = "";
            /*
                Declare custom css override
            */
            const css_override = ((bGithub && this.settings.css_gh && this.settings.css_gh.length > 0) ? (this.settings.css_gh) : (this.settings.css_og && this.settings.css_og.length > 0 && this.settings.css_og)) || "";
            /*
                OpenGist specific CSS
    
                @note       : these are edits the user should not need to edit.
                              OpenGist needs these edits in order to look right with the header
                              and footer.
    
                              obviously this condition doesn't matter even if it is injected into Github pastes,
                              but it would be usless code.
    
                              working with OpenGist developer to re-do the HTML generated when embedding a gist.
            */
            const css_og_append = `

        ::-webkit-scrollbar
        {
            width:              6px;
            height:             10px;
        }

        .opengist-embed .code
        {
            padding-top:        ${this.settings.blk_pad_t}px;
            padding-bottom:     ${this.settings.blk_pad_b}px;
            border-top:         ${css_bg_og_header_bor};
            background-color:   ${css_bg_color};
            width:              fit-content;
            margin-top:         -1px;
        }

        .opengist-embed .whitespace-pre
        {
            text-wrap:          wrap;
        }
        
        .opengist-embed .mb-4
        {
            margin-bottom:      1rem;
            backdrop-filter:    opacity(0);
            --tw-bg-opacity:    1;
            background-color:   ${css_bg_og_header_bg};
        }
        </style>
        `;
            if (bGithub === false)
                css_og = css_og_append;
            /*
                generate html output
            */
            const html_output = `
        <html>
            <head>
                <style>
                    html, body { height: 100%; margin: 0; padding: 0; }
                    ::-webkit-scrollbar
                    {
                        height:             10px;
                    }
                    
                    ::-webkit-scrollbar-track
                    {
                        background-color:   transparent;
                        border-radius:      5px;
                        margin:             1px;
                    }
                    
                    ::-webkit-scrollbar-thumb
                    {
                        border-radius:      10px;
                        background-color:   ${css_sb_color};
                    }
                </style>

                ${this.EventListener(gid)}

                <style>
                    ${content_css}
                </style>

                <! –– Injected CSS ––>
                <style>
                ${css_override}
                ${css_og}
                </style>

                <script>
                    ${content_js}
                </script>

            </head>

            <body>
                ${content_body}
            </body>
        </html>
        `;
            ct_iframe.srcdoc = html_output;
            el.appendChild(ct_iframe);
        });
    }
    /*
        Throw Error
    */
    ThrowError(el, gistInfo, err = '') {
        return __awaiter(this, void 0, void 0, function* () {
            const div_Error = el.createEl('div', { text: "", cls: 'gistr-container-error' });
            div_Error.createEl('div', { text: lng("err_gist_loading_fail_name"), cls: 'gistr-load-error-l1' });
            div_Error.createEl('div', { text: gistInfo, cls: "gistr-load-error-l2" });
            div_Error.createEl('small', { text: lng("err_gist_loading_fail_resp", err) });
        });
    }
    /*
        Get Javascript
    */
    GetJavascript(el, data, url) {
        return __awaiter(this, void 0, void 0, function* () {
            const reqUrlParams = { url: url, method: "GET", headers: { "Accept": "text/javascript" } };
            try {
                return yield obsidian.request(reqUrlParams);
            }
            catch (err) {
                return this.ThrowError(el, data, lng("err_gist_loading_fail_detail", err));
            }
        });
    }
    /*
        Get CSS
    */
    GetCSS(el, data, url) {
        return __awaiter(this, void 0, void 0, function* () {
            const reqUrlParams = { url: url, method: "GET", headers: { "Accept": "text/css" } };
            try {
                return yield obsidian.request(reqUrlParams);
            }
            catch (err) {
                return this.ThrowError(el, data, lng("err_gist_loading_fail_detail", err));
            }
        });
    }
}

/*
    Modal > Getting Started
*/
/*
    Modal > Getting Started > Class
*/
class ModalGettingStarted extends obsidian.Modal {
    /*
        Getting Started > Constructor
    */
    constructor(plugin, app, bFirstLoad) {
        super(app);
        this.plugin = plugin;
        this.manifest = plugin.manifest;
        this.firststart = bFirstLoad;
    }
    /*
        Modal > Getting Started > Action > Open & Wait
    */
    openAndAwait() {
        return new Promise((call) => {
            this.resolve = call;
            this.open();
        });
    }
    /*
        Modal > Getting Started > Action > On Open
    */
    onOpen() {
        const { contentEl } = this;
        /*
            Helper method for handling add each line of content
        */
        const AddLine = (elmParent, value, htmltag = null, cls = null) => {
            if (htmltag)
                return elmParent.createEl(htmltag, { text: value, cls: cls });
            else {
                elmParent.appendText(value);
                return elmParent;
            }
        };
        /*
            Customize moodal stylesheet
        */
        this.modalEl.classList.add('gistr-gs-modal');
        /*
            Modal > Getting Started > Content > Header
        */
        AddLine(contentEl, this.manifest.name, "h1");
        AddLine(contentEl, "v" + this.manifest.version, "h6", "gistr-gs-header");
        AddLine(contentEl, lng("gs_base_header"), "small");
        AddLine(contentEl, "", "div", "gistr-gs-separator");
        /*
            Modal > Getting Started > Content > Getting Started
        */
        AddLine(contentEl, lng("gs_og_name"), "h2");
        AddLine(contentEl, lng("gs_og_desc"), "small");
        const div_GettingStarted = contentEl.createDiv({ cls: "gistr-gs-modal-button-container" });
        new obsidian.ButtonComponent(div_GettingStarted)
            .setButtonText(lng("gs_og_btn_repo"))
            .setCta()
            .onClick(() => {
            window.open(lng("cfg_tab_su_ogrepo_url"));
        });
        new obsidian.ButtonComponent(div_GettingStarted)
            .setButtonText(lng("gs_og_btn_docs"))
            .onClick(() => {
            window.open(lng("cfg_tab_su_ogdocs_url"));
        });
        AddLine(contentEl, lng("gs_og_sub_1"), "small");
        /*
            Markdown Render Preview
        */
        this.cblk_preview = contentEl.createDiv();
        const gs_UsageCodeblock = "```````" + "\n" + "```" + this.plugin.settings.keyword + "\n" + "gist.domain.com/username/YOUR_GIST_ID" + "\n" + "```" + "\n```````";
        obsidian.MarkdownRenderer.render(this.plugin.app, gs_UsageCodeblock, this.cblk_preview, gs_UsageCodeblock, this.plugin);
        AddLine(contentEl, "", "div", "gistr-gs-separator");
        /*
            Modal > Getting Started > Content > Getting Started
        */
        AddLine(contentEl, lng("gs_gh_name"), "h2");
        AddLine(contentEl, lng("gs_gh_desc"), "small");
        this.cblk_preview = contentEl.createDiv();
        const gs_UsageCodeblock_gh = "```````" + "\n" + "```" + this.plugin.settings.keyword + "\n" + "gist.github.com/username/YOUR_GIST_ID" + "\n" + "gist.github.com/username/YOUR_GIST_ID#file_name" + "\n" + "```" + "\n```````";
        obsidian.MarkdownRenderer.render(this.plugin.app, gs_UsageCodeblock_gh, this.cblk_preview, gs_UsageCodeblock_gh, this.plugin);
        /*
            Footer Buttons
        */
        const div_Footer = contentEl.createDiv({ cls: "modal-button-container" });
        if (this.firststart === true) {
            new obsidian.ButtonComponent(div_Footer)
                .setButtonText(lng("gs_btn_settings_open"))
                .setCta()
                .onClick(() => {
                this.resolve("settings-open");
                this.close();
            });
            new obsidian.ButtonComponent(div_Footer)
                .setButtonText(lng("gs_btn_close"))
                .onClick(() => {
                this.close();
            });
        }
        else {
            new obsidian.ButtonComponent(div_Footer)
                .setButtonText(lng("gs_btn_close"))
                .onClick(() => {
                this.close();
            });
        }
    }
    /*
        Modal > Getting Started > Action > Close
    */
    close() {
        this.resolve("");
        super.close();
    }
    /*
        Modal > Getting Started > Action > On Close
    */
    onClose() {
        this.contentEl.empty();
    }
}

var t,e,s,i;!function(t){t.HEX="HEX",t.RGB="RGB",t.HSL="HSL",t.CIELab="CIELab",t.CMYK="CMYK";}(t||(t={})),function(t){t.ANALOGOUS="ANALOGOUS",t.COMPLEMENTARY="COMPLEMENTARY",t.SPLIT_COMPLEMENTARY="SPLIT_COMPLEMENTARY",t.TRIADIC="TRIADIC",t.TETRADIC="TETRADIC",t.SQUARE="SQUARE";}(e||(e={})),function(t){t.ADDITIVE="ADDITIVE",t.SUBTRACTIVE="SUBTRACTIVE";}(s||(s={})),function(t){t.black="#000000",t.silver="#C0C0C0",t.gray="#808080",t.white="#FFFFFF",t.maroon="#800000",t.red="#FF0000",t.purple="#800080",t.fuchsia="#FF00FF",t.green="#008000",t.lime="#00FF00",t.olive="#808000",t.yellow="#FFFF00",t.navy="#000080",t.blue="#0000FF",t.teal="#008080",t.aqua="#00FFFF",t.orange="#FFA500",t.aliceblue="#F0F8FF",t.antiquewhite="#FAEBD7",t.aquamarine="#7FFFD4",t.azure="#F0FFFF",t.beige="#F5F5DC",t.bisque="#FFE4C4",t.blanchedalmond="#FFEBCD",t.blueviolet="#8A2BE2",t.brown="#A52A2A",t.burlywood="#DEB887",t.cadetblue="#5F9EA0",t.chartreuse="#7FFF00",t.chocolate="#D2691E",t.coral="#FF7F50",t.cornflowerblue="#6495ED",t.cornsilk="#FFF8DC",t.crimson="#DC143C",t.cyan="#00FFFF",t.darkblue="#00008B",t.darkcyan="#008B8B",t.darkgoldenrod="#B8860B",t.darkgray="#A9A9A9",t.darkgreen="#006400",t.darkgrey="#A9A9A9",t.darkkhaki="#BDB76B",t.darkmagenta="#8B008B",t.darkolivegreen="#556B2F",t.darkorange="#FF8C00",t.darkorchid="#9932CC",t.darkred="#8B0000",t.darksalmon="#E9967A",t.darkseagreen="#8FBC8F",t.darkslateblue="#483D8B",t.darkslategray="#2F4F4F",t.darkslategrey="#2F4F4F",t.darkturquoise="#00CED1",t.darkviolet="#9400D3",t.deeppink="#FF1493",t.deepskyblue="#00BFFF",t.dimgray="#696969",t.dimgrey="#696969",t.dodgerblue="#1E90FF",t.firebrick="#B22222",t.floralwhite="#FFFAF0",t.forestgreen="#228B22",t.gainsboro="#DCDCDC",t.ghostwhite="#F8F8FF",t.gold="#FFD700",t.goldenrod="#DAA520",t.greenyellow="#ADFF2F",t.grey="#808080",t.honeydew="#F0FFF0",t.hotpink="#FF69B4",t.indianred="#CD5C5C",t.indigo="#4B0082",t.ivory="#FFFFF0",t.khaki="#F0E68C",t.lavender="#E6E6FA",t.lavenderblush="#FFF0F5",t.lawngreen="#7CFC00",t.lemonchiffon="#FFFACD",t.lightblue="#ADD8E6",t.lightcoral="#F08080",t.lightcyan="#E0FFFF",t.lightgoldenrodyellow="#FAFAD2",t.lightgray="#D3D3D3",t.lightgreen="#90EE90",t.lightgrey="#D3D3D3",t.lightpink="#FFB6C1",t.lightsalmon="#FFA07A",t.lightseagreen="#20B2AA",t.lightskyblue="#87CEFA",t.lightslategray="#778899",t.lightslategrey="#778899",t.lightsteelblue="#B0C4DE",t.lightyellow="#FFFFE0",t.limegreen="#32CD32",t.linen="#FAF0E6",t.magenta="#FF00FF",t.mediumaquamarine="#66CDAA",t.mediumblue="#0000CD",t.mediumorchid="#BA55D3",t.mediumpurple="#9370DB",t.mediumseagreen="#3CB371",t.mediumslateblue="#7B68EE",t.mediumspringgreen="#00FA9A",t.mediumturquoise="#48D1CC",t.mediumvioletred="#C71585",t.midnightblue="#191970",t.mintcream="#F5FFFA",t.mistyrose="#FFE4E1",t.moccasin="#FFE4B5",t.navajowhite="#FFDEAD",t.oldlace="#FDF5E6",t.olivedrab="#6B8E23",t.orangered="#FF4500",t.orchid="#DA70D6",t.palegoldenrod="#EEE8AA",t.palegreen="#98FB98",t.paleturquoise="#AFEEEE",t.palevioletred="#DB7093",t.papayawhip="#FFEFD5",t.peachpuff="#FFDAB9",t.peru="#CD853F",t.pink="#FFC0CB",t.plum="#DDA0DD",t.powderblue="#B0E0E6",t.rosybrown="#BC8F8F",t.royalblue="#4169E1",t.saddlebrown="#8B4513",t.salmon="#FA8072",t.sandybrown="#F4A460",t.seagreen="#2E8B57",t.seashell="#FFF5EE",t.sienna="#A0522D",t.skyblue="#87CEEB",t.slateblue="#6A5ACD",t.slategray="#708090",t.slategrey="#708090",t.snow="#FFFAFA",t.springgreen="#00FF7F",t.steelblue="#4682B4",t.tan="#D2B48C",t.thistle="#D8BFD8",t.tomato="#FF6347",t.turquoise="#40E0D0",t.violet="#EE82EE",t.wheat="#F5DEB3",t.whitesmoke="#F5F5F5",t.yellowgreen="#9ACD32",t.rebeccapurple="#663399";}(i||(i={}));const a=Object.keys(i),r={HEX:["R","G","B","A"],RGB:["R","G","B","A"],HSL:["H","S","L","A"],CIELab:["L","a","b","A"],CMYK:["C","M","Y","K","A"]},n={BGR:t.RGB,ABGR:t.RGB,HLS:t.HSL,AHLS:t.HSL,LAB:t.CIELab,ALAB:t.CIELab,CKMY:t.CMYK,ACKMY:t.CMYK};var c;!function(t){t.NUMBER="number",t.BOOLEAN="boolean";}(c||(c={}));const o={[t.HEX]:/^#(?:([a-f\d])([a-f\d])([a-f\d])([a-f\d])?|([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?)$/i,[t.RGB]:/^rgba?\s*\(\s*(?:((?:\d*\.)?\d+%?)\s*,\s*((?:\d*\.)?\d+%?)\s*,\s*((?:\d*\.)?\d+%?)(?:\s*,\s*((?:\d*\.)?\d+))?|((?:\d*\.)?\d+%?)\s*((?:\d*\.)?\d+%?)\s*((?:\d*\.)?\d+%?)(?:\s*\/\s*((?:\d*\.)?\d+%?))?)\s*\)$/,[t.HSL]:/^hsla?\s*\(\s*(?:(-?(?:\d*\.)?\d+(?:deg|grad|rad|turn)?)\s*,\s*((?:\d*\.)?\d+)%\s*,\s*((?:\d*\.)?\d+)%(?:\s*,\s*((?:\d*\.)?\d+))?|(-?(?:\d*\.)?\d+(?:deg|grad|rad|turn)?)\s*((?:\d*\.)?\d+)%\s*((?:\d*\.)?\d+)%(?:\s*\/\s*((?:\d*\.)?\d+%?))?)\s*\)$/,[t.CIELab]:/^lab\s*\(\s*(?:((?:\d*\.)?\d+%?)\s*(-?(?:\d*\.)?\d+%?)\s*(-?(?:\d*\.)?\d+%?)(?:\s*\/\s*((?:\d*\.)?\d+%?))?)\s*\)$/,[t.CMYK]:/^(?:device-cmyk|cmyk)\s*\(\s*(?:((?:\d*\.)?\d+%?)\s*,\s*((?:\d*\.)?\d+%?)\s*,\s*((?:\d*\.)?\d+%?)\s*,\s*((?:\d*\.)?\d+%?)(?:\s*,\s*((?:\d*\.)?\d+))?|((?:\d*\.)?\d+%?)\s*((?:\d*\.)?\d+%?)\s*((?:\d*\.)?\d+%?)\s*((?:\d*\.)?\d+%?)(?:\s*\/\s*((?:\d*\.)?\d+%?))?)\s*\)$/},A=/^(-?(?:\d*\.)?\d+)((?:deg|grad|rad|turn)?)$/,h=/^(-?\d+(?:\.\d+)?|-?\.\d+)%$/,u=/^0x([a-f\d]{1,2})$/i,d=/\{(\d+)\}/g,l=/,( +|\d+)/g,E=/ +/,m="The provided string color doesn't have a correct format",b="The provided color object doesn't have the proper keys or format";var C,L,g;!function(t){t.NONE="none",t.DEGREES="deg",t.GRADIANS="grad",t.RADIANS="rad",t.TURNS="turn";}(C||(C={})),function(t){t.NONE="none",t.PERCENT="percent";}(L||(L={})),function(t){t.DEVICE_CMYK="device-cmyk",t.CMYK="cmyk";}(g||(g={}));const B={decimals:6,legacyCSS:!1,spacesAfterCommas:!1,anglesUnit:C.NONE,rgbUnit:L.NONE,labUnit:L.NONE,cmykUnit:L.PERCENT,alphaUnit:L.NONE,cmykFunction:g.DEVICE_CMYK},p=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),H=t=>+`${t}`.replace(h,"$1"),F=t=>h.test(`${t}`)?H(t):Math.min(+t,100),R=t=>(1===t.length&&(t+=t),parseInt(t,16)),S=t=>{const e=D(t,0).toString(16).toUpperCase();return 1===e.length?`0x0${e}`:`0x${e}`},I=(t,e=!1)=>!e&&h.test(t)?Math.min(255*H(t)/100,255):u.test(t)?(3===t.length&&(t+=t.slice(-1)),e?D(t)/255:D(t)):Math.min(+t,e?1:255),G=t=>h.test(t)?f(125*H(t)/100,-125,125):f(+t,-125,125),M=t=>Math.min(h.test(t)?H(t)/100:+t,1),y=t=>[...t].sort().join("").toUpperCase(),D=(t,e=6)=>{const s=Math.pow(10,e);return Math.round(+t*s)/s},f=(t,e,s)=>Math.max(e,Math.min(t,s)),O=t=>{if("string"==typeof t){const e=t.match(A),s=+e[1];switch(e[2]){case C.RADIANS:t=D(180*s/Math.PI);break;case C.TURNS:t=D(360*s);break;case C.GRADIANS:t=D(.9*s);break;case C.DEGREES:default:t=s;}}return (t>360||t<0)&&(t-=360*Math.floor(t/360)),t},Y=(t,e)=>{let s;switch(e){case C.RADIANS:s=D((t=>t*Math.PI/180)(t));break;case C.TURNS:s=D(t/360);break;case C.GRADIANS:s=D(10/9*t);break;case C.DEGREES:case C.NONE:default:s=t;}return s},k=(t,...e)=>{const s=[],i=[],a=[],r=[],n=[],u=[],d=Object.values(C),m=Object.values(L),b=Object.values(g),p={legacyCSS:0,spacesAfterCommas:0,cmykFunction:0};for(const t of e)if("string"==typeof t){if(s.push(t),t.includes(",")){p.legacyCSS++;const e=t.match(l);1===new Set(e).size&&E.test(e[0].slice(1))&&p.spacesAfterCommas++;}if(t.match(o.HSL)){const e=t.match(o.HSL),s=e[1]||e[5],a=e[8],r=s.match(A)[2];i.push(""===r?C.NONE:r),u.push(h.test(a));continue}if(o.RGB.test(t)){const e=t.match(o.RGB),s=e[1]||e[5],i=e[2]||e[6],r=e[3]||e[7],n=e[8];a.push(h.test(s)&&h.test(i)&&h.test(r)),u.push(h.test(n));continue}if(o.CIELab.test(t)){const e=t.match(o.CIELab),s=e[1],i=e[2],a=e[3],n=e[4];r.push(h.test(s)&&h.test(i)&&h.test(a)),u.push(h.test(n));continue}if(t.match(o.CMYK)){const e=t.match(o.CMYK),s=e[1]||e[6],i=e[2]||e[7],a=e[3]||e[8],r=e[4]||e[9],c=e[10];n.push(h.test(s)&&h.test(i)&&h.test(a)&&h.test(r)),t.startsWith("cmyk")&&p.cmykFunction++,u.push(h.test(c));}}return {decimals:typeof t.decimals===c.NUMBER?t.decimals:B.decimals,legacyCSS:typeof t.legacyCSS===c.BOOLEAN?t.legacyCSS:Boolean(s.length&&p.legacyCSS===s.length)||B.legacyCSS,spacesAfterCommas:typeof t.spacesAfterCommas===c.BOOLEAN?t.spacesAfterCommas:Boolean(s.length&&p.spacesAfterCommas===s.length)||B.spacesAfterCommas,anglesUnit:t.anglesUnit&&d.includes(t.anglesUnit)?t.anglesUnit:1===new Set(i).size?i[0]:B.anglesUnit,rgbUnit:t.rgbUnit&&m.includes(t.rgbUnit)?t.rgbUnit:1===new Set(a).size&&a[0]?L.PERCENT:B.rgbUnit,labUnit:t.labUnit&&m.includes(t.labUnit)?t.labUnit:1===new Set(r).size&&r[0]?L.PERCENT:B.labUnit,cmykUnit:t.cmykUnit&&m.includes(t.cmykUnit)?t.cmykUnit:1!==new Set(n).size||n[0]?B.cmykUnit:L.NONE,alphaUnit:t.alphaUnit&&m.includes(t.alphaUnit)?t.alphaUnit:1===new Set(u).size&&u[0]?L.PERCENT:B.alphaUnit,cmykFunction:t.cmykFunction&&b.includes(t.cmykFunction)?t.cmykFunction:n.length&&n.length===p.cmykFunction?g.CMYK:B.cmykFunction}},K=t=>`${t}`in s,X=[[.4360747,.3850649,.1430804],[.2225045,.7168786,.0606169],[.0139322,.0971045,.7141733]],T=[[3.1338561,-1.6168667,-.4906146],[-.9787684,1.9161415,.033454],[.0719453,-.2289914,1.4052427]],N=X.map((t=>t.reduce(((t,e)=>t+e),0))),$=(t,e,s)=>(s<0&&(s+=6),s>=6&&(s-=6),D(s<1?255*((e-t)*s+t):s<3?255*e:s<4?255*((e-t)*(4-s)+t):255*t)),j=t=>t<=.04045?t/12.92:((t+.055)/1.055)**2.4,U=t=>t<=.0031308?12.92*t:1.055*t**(1/2.4)-.055,w=(t,e,s,i)=>{const a=[0,0,0],r=[t,e,s];return i.forEach(((t,e)=>{t.forEach(((t,s)=>{a[e]+=t*r[s];}));})),a},x=(t,e,s)=>{e/=100;const i=(s/=100)<=.5?s*(e+1):s+e-s*e,a=2*s-i;return {R:$(a,i,(t/=60)+2),G:$(a,i,t),B:$(a,i,t-2)}},v=(t,e,s,i=1)=>{t/=255,e/=255,s/=255,i=Math.min(i,1);const a=Math.max(t,e,s),r=Math.min(t,e,s),n=a-r;let c=0,o=0;const A=(a+r)/2;if(0!==n){switch(a){case t:c=(e-s)/n%6;break;case e:c=(s-t)/n+2;break;case s:c=(t-e)/n+4;}c=D(60*c),c<0&&(c+=360),o=n/(1-Math.abs(2*A-1));}return {H:c,S:D(100*o),L:D(100*A),A:i}},V=(t,e,s)=>{const i=[t/255,e/255,s/255].map(j),a=w(i[0],i[1],i[2],X),r=((t,e,s)=>{const i=t=>t>(6/29)**3?Math.cbrt(t):t/(3*(6/29)**2)+4/29,a=i(t/N[0]),r=i(e/N[1]);return [116*r-16,500*(a-r),200*(r-i(s/N[2]))]})(a[0],a[1],a[2]);return {L:r[0],a:r[1],b:r[2]}},P=(t,e,s)=>{const i=((t,e,s)=>{const i=t=>t>6/29?t**3:3*(6/29)**2*(t-4/29),a=(t+16)/116,r=e/500,n=s/200;return [N[0]*i(a+r),N[1]*i(a),N[2]*i(a-n)]})(t,e,s),a=w(i[0],i[1],i[2],T).map(U);return {R:f(255*a[0],0,255),G:f(255*a[1],0,255),B:f(255*a[2],0,255)}},q=(t,e,s,i)=>({R:D(255*(1-t)*(i=1-i)),G:D(255*(1-e)*i),B:D(255*(1-s)*i)}),_=(t,e,s)=>{t/=255,e/=255,s/=255;const i=1-Math.max(t,e,s),a=1-i,r=a&&(a-e)/a,n=a&&(a-s)/a;return {C:D(100*(a&&(a-t)/a)),M:D(100*r),Y:D(100*n),K:D(100*i)}},z=(t,e)=>{if(t<0&&(t+=360),t>360&&(t-=360),360===t||0===t)return t;const s=[[0,120],[120,180],[180,240],[240,360]],i=[[0,60],[60,120],[120,240],[240,360]],a=e?i:s;let r=0,n=0,c=0,o=0;return (e?s:i).find(((e,s)=>t>=e[0]&&t<e[1]&&(r=e[0],n=e[1],c=a[s][0],o=a[s][1],!0))),c+(o-c)/(n-r)*(t-r)},Q=t=>t?", ":",",W=(t,e)=>{const s=y(Object.keys(t));return r[n[s]].reduce(((s,i,a)=>{const r=t[i];return void 0!==r&&s.push(e(r,a)),s}),[])},J=(t,e)=>t.replace(d,((t,s)=>`${e[+s-1]}`)),Z=(t,e,s=!1)=>{const{alphaUnit:i,legacyCSS:a,decimals:r}=e;return i!==L.PERCENT||a&&!s?D(t,r):`${D(100*t,r)}%`},tt={[t.HEX]:t=>{const e=W(t,(t=>(t=>{let e=D(t,0).toString(16).toUpperCase();return 1===e.length&&(e=`0${e}`),e})(D(t)))),s=4===e.length?"#{1}{2}{3}{4}":"#{1}{2}{3}";return J(s,e)},[t.RGB]:(t,e)=>{const{decimals:s,legacyCSS:i,spacesAfterCommas:a,rgbUnit:r}=e,n=Q(a),c=W(t,((t,i)=>r===L.PERCENT&&i<3?`${((t,e)=>D(t/255*100,e))(t,s)}%`:3===i?Z(t,e):D(t,s))),o=i?4===c.length?`rgba({1}${n}{2}${n}{3}${n}{4})`:`rgb({1}${n}{2}${n}{3})`:4===c.length?"rgb({1} {2} {3} / {4})":"rgb({1} {2} {3})";return J(o,c)},[t.HSL]:(t,e)=>{const{decimals:s,legacyCSS:i,spacesAfterCommas:a,anglesUnit:r}=e,n=Q(a),c=W(t,((t,i)=>{if(0===i&&r!==C.NONE){return `${D(Y(t,r),s)}${r}`}return 3===i?Z(t,e):D(t,s)})),o=i?4===c.length?`hsla({1}${n}{2}%${n}{3}%${n}{4})`:`hsl({1}${n}{2}%${n}{3}%)`:4===c.length?"hsl({1} {2}% {3}% / {4})":"hsl({1} {2}% {3}%)";return J(o,c)},[t.CIELab]:(t,e)=>{const{decimals:s,labUnit:i}=e,a=W(t,((t,a)=>{if(0===a){const e=D(F(t),s);return i===L.PERCENT?`${e}%`:`${e}`}return a<3?i===L.PERCENT?`${((t,e)=>D(t/125*100,e))(t,s)}%`:D(t,s):Z(t,e,!0)})),r=4===a.length?"lab({1} {2} {3} / {4})":"lab({1} {2} {3})";return J(r,a)},[t.CMYK]:(t,e)=>{const{decimals:s,legacyCSS:i,spacesAfterCommas:a,cmykUnit:r,cmykFunction:n}=e,c=Q(a),o=W(t,((t,i)=>r===L.PERCENT&&i<4?`${D(t,s)}%`:4===i?Z(t,e):D(t/100,s))),A=i?5===o.length?`${n}({1}${c}{2}${c}{3}${c}{4}${c}{5})`:`${n}({1}${c}{2}${c}{3}${c}{4})`:5===o.length?`${n}({1} {2} {3} {4} / {5})`:`${n}({1} {2} {3} {4})`;return J(A,o)}},et=t=>("string"==typeof t&&(t=h.test(t)?H(t)/100:+t),isNaN(+t)||t>1?1:D(t)),st=(t,e,i)=>e.reduce(((e,a)=>[...e,{...t,H:i===s.ADDITIVE?O(t.H+a):O(z(z(t.H,!1)+a,!0))}]),[{...t}]),it=(t,e)=>st(t,[30,-30],e),at=(t,e)=>st(t,[180],e),rt=(t,e)=>st(t,[150,-150],e),nt=(t,e)=>st(t,[120,-120],e),ct=(t,e)=>st(t,[60,-120,180],e),ot=(t,e)=>st(t,[90,-90,180],e),At=e=>"string"==typeof e?(e=>{let s;if(Object.keys(t).some((t=>{if(o[t].test(e))return s=t,!0})),!s&&~a.indexOf(e)&&(s=t.HEX),!s)throw new Error(m);return s})(e):(e=>{let s,i=!1;const a=y(Object.keys(e));if(n[a]&&(s=n[a]),s&&s===t.RGB){const a=Object.entries(e).some((t=>!u.test(`${t[1]}`))),r=Object.entries(e).some((t=>!(h.test(`${t[1]}`)||!u.test(`${t[1]}`)&&!isNaN(+t[1])&&+t[1]<=255)));a&&r&&(i=!0),a||(s=t.HEX);}if(!s||i)throw new Error(b);return s})(e),ht={[t.HEX](t){const e=(~a.indexOf(t)?i[t]:t).match(o.HEX),s={R:R(e[1]||e[5]),G:R(e[2]||e[6]),B:R(e[3]||e[7])},r=e[4]||e[8];return void 0!==r&&(s.A=R(r)/255),s},[t.RGB](t){const e=t.match(o.RGB),s=I(e[1]||e[5]),i=I(e[2]||e[6]),a=I(e[3]||e[7]),r=e[4]||e[8],n={R:Math.min(s,255),G:Math.min(i,255),B:Math.min(a,255)};return void 0!==r&&(n.A=et(r)),n},[t.HSL](t){const e=t.match(o.HSL),s=O(e[1]||e[5]),i=F(e[2]||e[6]),a=F(e[3]||e[7]),r=e[4]||e[8],n=x(s,i,a);return void 0!==r&&(n.A=et(r)),n},[t.CIELab](t){const e=t.match(o.CIELab),s=F(e[1]),i=G(e[2]),a=G(e[3]),r=e[4],n=P(s,i,a);return void 0!==r&&(n.A=et(r)),n},[t.CMYK](t){const e=t.match(o.CMYK),s=M(e[1]||e[6]),i=M(e[2]||e[7]),a=M(e[3]||e[8]),r=M(e[4]||e[9]),n=e[5]||e[10],c=q(s,i,a,r);return void 0!==n&&(c.A=et(n)),c}},ut={[t.HEX](t){const e={R:I(`${t.R}`),G:I(`${t.G}`),B:I(`${t.B}`)};return p(t,"A")&&(e.A=Math.min(I(`${t.A}`,!0),1)),e},[t.RGB](t){return this.HEX(t)},[t.HSL](t){const e=F(`${t.S}`),s=F(`${t.L}`),i=x(O(t.H),e,s);return p(t,"A")&&(i.A=et(t.A)),i},[t.CIELab](t){const e=F(`${t.L}`),s=G(`${t.a}`),i=G(`${t.b}`),a=P(e,s,i);return p(t,"A")&&(a.A=et(t.A)),a},[t.CMYK](t){const e=M(`${t.C}`),s=M(`${t.M}`),i=M(`${t.Y}`),a=M(`${t.K}`),r=q(e,s,i,a);return p(t,"A")&&(r.A=et(t.A)),r}},dt=(t,e=At(t))=>"string"==typeof t?ht[e](t):ut[e](t),lt={[t.HEX]:t=>({R:S(t.R),G:S(t.G),B:S(t.B)}),HEXA(t){const e=lt.HEX(t);return e.A=p(t,"A")?S(255*t.A):"0xFF",e},[t.RGB](t,e){const s=Ct(t,e);return p(s,"A")&&delete s.A,s},RGBA(t,e){const s=lt.RGB(t,e);return s.A=p(t,"A")?D(t.A):1,s},[t.HSL](t,e){const s=v(t.R,t.G,t.B);return delete s.A,Lt(s,e)},HSLA(t,e){const s=lt.HSL(t,e);return s.A=p(t,"A")?D(t.A,e):1,s},[t.CIELab](t,e){const s=V(t.R,t.G,t.B);return gt(s,e)},CIELabA(t,e){const s=lt.CIELab(t,e);return s.A=p(t,"A")?D(t.A,e):1,s},[t.CMYK]:(t,e)=>Bt(_(t.R,t.G,t.B),e),CMYKA(t,e){const s=lt.CMYK(t,e);return s.A=p(t,"A")?D(t.A,e):1,s}},Et=(e,s,i,a)=>{const r=At(e),n="string"==typeof e,c=dt(e,r),o="string"==typeof e&&p(c,"A")||"string"!=typeof e&&p(e,"A"),A=v(c.R,c.G,c.B,c.A);o||delete A.A;const h=i?A.L/(s+1):(100-A.L)/(s+1),u=Array(s).fill(null).map(((t,e)=>({...A,L:A.L+h*(e+1)*(1-2*+i)})));switch(r){case t.HEX:default:return u.map((t=>{const e=x(t.H,t.S,t.L);return o&&(e.A=t.A),n?o?tt.HEX({...e,A:D(255*e.A)}):tt.HEX(e):o?lt.HEXA(e):lt.HEX(e)}));case t.RGB:return u.map((t=>{const e=x(t.H,t.S,t.L);return o&&(e.A=t.A),n?tt.RGB(e,a):o?lt.RGBA(e,a.decimals):lt.RGB(e,a.decimals)}));case t.HSL:return u.map((t=>n?tt.HSL(t,a):o?lt.HSLA({...x(t.H,t.S,t.L),A:t.A},a.decimals):lt.HSL(x(t.H,t.S,t.L),a.decimals)));case t.CIELab:return u.map((t=>{const e=x(t.H,t.S,t.L);return n?tt.CIELab(o?lt.CIELabA(e,a.decimals):lt.CIELab(e,a.decimals),a):o?lt.CIELabA({...e,A:t.A},a.decimals):lt.CIELab(e,a.decimals)}))}},mt={buildHarmony(e,s,i,a){const r=At(e),n=dt(e,r),c=v(n.R,n.G,n.B,n.A),o="string"==typeof e&&p(n,"A")||"string"!=typeof e&&p(e,"A"),A="string"==typeof e;switch(r){case t.HEX:default:return o?this.HEXA(Lt(c,0),s,i,A):this.HEX(Lt(c,0),s,i,A);case t.HSL:return o?this.HSLA(c,s,i,A,a):this.HSL(c,s,i,A,a);case t.RGB:return o?this.RGBA(c,s,i,A,a):this.RGB(c,s,i,A,a);case t.CIELab:return o?this.CIELabA(c,s,i,A,a):this.CIELab(c,s,i,A,a)}},[t.HEX]:(t,e,s,i)=>e(t,s).map((t=>i?tt.HEX(x(t.H,t.S,t.L)):lt.HEX(x(t.H,t.S,t.L)))),HEXA:(t,e,s,i)=>e(t,s).map((t=>i?tt.HEX({...x(t.H,t.S,t.L),A:255*et(t.A)}):lt.HEXA({...x(t.H,t.S,t.L),A:et(t.A)}))),[t.RGB]:(t,e,s,i,a)=>e(t,s).map((t=>i?tt.RGB(x(t.H,t.S,t.L),a):lt.RGB(x(t.H,t.S,t.L),a.decimals))),RGBA:(t,e,s,i,a)=>e(t,s).map((t=>i?tt.RGB({...x(t.H,t.S,t.L),A:et(t.A)},a):lt.RGBA({...x(t.H,t.S,t.L),A:et(t.A)},a.decimals))),[t.HSL]:(t,e,s,i,a)=>e(t,s).map((t=>i?tt.HSL({H:t.H,S:t.S,L:t.L},a):lt.HSL(x(t.H,t.S,t.L),a.decimals))),HSLA:(t,e,s,i,a)=>e(t,s).map((t=>i?tt.HSL({...t,A:et(t.A)},a):lt.HSLA({...x(t.H,t.S,t.L),A:et(t.A)},a.decimals))),[t.CIELab]:(t,e,s,i,a)=>e(t,s).map((t=>{const e=x(t.H,t.S,t.L);return i?tt.CIELab(V(e.R,e.G,e.B),a):lt.CIELab(e,a.decimals)})),CIELabA:(t,e,s,i,a)=>e(t,s).map((t=>{const e=x(t.H,t.S,t.L);return i?tt.CIELab({...V(e.R,e.G,e.B),A:et(t.A)},a):lt.CIELabA({...e,A:et(t.A)},a.decimals)}))},bt={mix(t,e){const i=t.map((t=>{const e=At(t);return dt(t,e)})),a=e===s.SUBTRACTIVE?i.map((t=>{const e=((t,e,s)=>{const i=Math.min(t,e,s),a=Math.min(255-t,255-e,255-s),r=t-i,n=e-i,c=s-i,o=Math.min(r,n),A=r-o,h=(n+o)/2,u=(c+n-o)/2,d=Math.max(A,h,u)/Math.max(r,n,c),l=isNaN(d)||d===1/0||d<=0?1:d;return {R:A/l+a,Y:h/l+a,B:u/l+a}})(t.R,t.G,t.B);return p(t,"A")&&(e.A=t.A),e})):null;function r(t){const i=e===s.ADDITIVE?{R:0,G:0,B:0,A:0}:{R:0,Y:0,B:0,A:0};return t.reduce(((t,i)=>{const a=p(i,"A")?i.A:1,r={R:Math.min(t.R+i.R*a,255),B:Math.min(t.B+i.B*a,255),A:1-(1-a)*(1-t.A)},n="G"in t?t.G:t.Y,c="G"in i?i.G:i.Y;return {...r,...e===s.ADDITIVE?{G:Math.min(n+c*a,255)}:{Y:Math.min(n+c*a,255)}}}),i)}let n;if(e===s.ADDITIVE)n=r(i);else {const t=r(a);n=((t,e,s)=>{const i=Math.min(t,e,s),a=Math.min(255-t,255-e,255-s),r=t-i,n=e-i,c=s-i,o=Math.min(n,c),A=r+n-o,h=n+o,u=2*(c-o),d=Math.max(A,h,u)/Math.max(r,n,c),l=isNaN(d)||d===1/0||d<=0?1:d;return {R:A/l+a,G:h/l+a,B:u/l+a}})(t.R,t.Y,t.B),n.A=t.A;}return {R:D(n.R),G:D(n.G),B:D(n.B),A:f(n.A,0,1)}},[t.HEX](t,e,s){const i=this.mix(t,e);return delete i.A,s?tt.HEX(i):lt.HEX(i)},HEXA(t,e,s){const i=this.mix(t,e);return i.A=s?255*et(i.A):et(i.A),s?tt.HEX(i):lt.HEXA(i)},[t.RGB](t,e,s,i){const a=this.mix(t,e);return delete a.A,s?tt.RGB(a,i):lt.RGB(a,i.decimals)},RGBA(t,e,s,i){const a=this.mix(t,e);return s?tt.RGB(a,i):lt.RGBA(a,i.decimals)},[t.HSL](t,e,s,i){const a=this.mix(t,e),r=v(a.R,a.G,a.B);return delete a.A,delete r.A,s?tt.HSL(r,i):lt.HSL(a,i.decimals)},HSLA(t,e,s,i){const a=this.mix(t,e),r=v(a.R,a.G,a.B,a.A);return s?tt.HSL(r,i):lt.HSLA(a,i.decimals)},[t.CIELab](t,e,s,i){const a=this.mix(t,e),r=V(a.R,a.G,a.B);return delete a.A,s?tt.CIELab(r,i):lt.CIELabA(a,i.decimals)},CIELabA(t,e,s,i){const a=this.mix(t,e),r=V(a.R,a.G,a.B);return p(a,"A")&&(r.A=a.A),s?tt.CIELab(r,i):lt.CIELabA(a,i.decimals)}},Ct=(t,e)=>({R:D(t.R,e),G:D(t.G,e),B:D(t.B,e),...p(t,"A")?{A:D(t.A,e)}:{}}),Lt=(t,e)=>({H:D(t.H,e),S:D(t.S,e),L:D(t.L,e),...p(t,"A")?{A:D(t.A,e)}:{}}),gt=(t,e)=>({L:D(t.L,e),a:D(t.a,e),b:D(t.b,e)}),Bt=(t,e)=>({C:D(t.C,e),M:D(t.M,e),Y:D(t.Y,e),K:D(t.K,e)}),pt=(t,e,s,i)=>i(dt(t,e),s),Ht=(t,e,s,i,a)=>{s<1&&(s=5);const r=((t,e,s)=>{const i=s-1,a=(e.R-t.R)/i,r=(e.G-t.G)/i,n=(e.B-t.B)/i,c=et(t.A),o=(et(e.A)-c)/i;return Array(s).fill(null).map(((s,A)=>0===A?t:A===i?e:{R:D(t.R+a*A),G:D(t.G+r*A),B:D(t.B+n*A),A:D(c+o*A)}))})(dt(t),dt(e),s);return r.map((t=>a(t,i)))},Ft=(t,s,i,a)=>({[e.ANALOGOUS]:mt.buildHarmony(s,it,i,a),[e.COMPLEMENTARY]:mt.buildHarmony(s,at,i,a),[e.SPLIT_COMPLEMENTARY]:mt.buildHarmony(s,rt,i,a),[e.TRIADIC]:mt.buildHarmony(s,nt,i,a),[e.TETRADIC]:mt.buildHarmony(s,ct,i,a),[e.SQUARE]:mt.buildHarmony(s,ot,i,a)}[t]);class Rt{constructor(t,e={}){this._options=k(e,t),this.rgb=dt(t),this.updateHSL(),this.updateLab(),this.updateCMYK();}updateRGB(){this.rgb={...x(this.hsl.H,this.hsl.S,this.hsl.L),A:this.hsl.A};}updateRGBFromCMYK(){this.rgb={...q(this.cmyk.C,this.cmyk.M,this.cmyk.Y,this.cmyk.K),A:this.rgb.A};}updateRGBFromLab(){this.rgb={...P(this.lab.L,this.lab.a,this.lab.b),A:this.rgb.A};}updateHSL(){this.hsl=v(this.rgb.R,this.rgb.G,this.rgb.B,this.rgb.A);}updateLab(){this.lab={...V(this.rgb.R,this.rgb.G,this.rgb.B),A:this.rgb.A};}updateCMYK(){this.cmyk=_(this.rgb.R,this.rgb.G,this.rgb.B);}setOptions(t={}){return this._options={...this._options,...t},this}setH(t){return this.hsl.H=O(t),this.updateRGB(),this.updateLab(),this.updateCMYK(),this}setS(t){return this.hsl.S=f(t,0,100),this.updateRGB(),this.updateLab(),this.updateCMYK(),this}setL(t){return this.hsl.L=f(t,0,100),this.updateRGB(),this.updateLab(),this.updateCMYK(),this}setR(t){this.rgb.R=f(t,0,255),this.updateHSL(),this.updateLab(),this.updateCMYK();}setG(t){return this.rgb.G=f(t,0,255),this.updateHSL(),this.updateLab(),this.updateCMYK(),this}setB(t){return this.rgb.B=f(t,0,255),this.updateHSL(),this.updateLab(),this.updateCMYK(),this}setCIEL(t){return this.lab.L=f(t,0,100),this.updateRGBFromLab(),this.updateHSL(),this.updateCMYK(),this}setCIEa(t){return this.lab.a=f(t,-125,125),this.updateRGBFromLab(),this.updateHSL(),this.updateCMYK(),this}setCIEb(t){return this.lab.b=f(t,-125,125),this.updateRGBFromLab(),this.updateHSL(),this.updateCMYK(),this}setA(t){return this.hsl.A=this.rgb.A=f(t,0,1),this}setC(t){return this.cmyk.C=f(t,0,100),this.updateRGBFromCMYK(),this.updateHSL(),this.updateLab(),this}setM(t){return this.cmyk.M=f(t,0,100),this.updateRGBFromCMYK(),this.updateHSL(),this.updateLab(),this}setY(t){return this.cmyk.Y=f(t,0,100),this.updateRGBFromCMYK(),this.updateHSL(),this.updateLab(),this}setK(t){return this.cmyk.K=f(t,0,100),this.updateRGBFromCMYK(),this.updateHSL(),this.updateLab(),this}get options(){return this._options}get H(){return D(this.hsl.H,this.options.decimals)}get S(){return D(this.hsl.S,this.options.decimals)}get L(){return D(this.hsl.L,this.options.decimals)}get CIEL(){return D(this.lab.L,this.options.decimals)}get CIEa(){return D(this.lab.a,this.options.decimals)}get CIEb(){return D(this.lab.b,this.options.decimals)}get R(){return D(this.rgb.R,this.options.decimals)}get G(){return D(this.rgb.G,this.options.decimals)}get B(){return D(this.rgb.B,this.options.decimals)}get A(){return D(this.hsl.A,this.options.decimals)}get C(){return D(this.cmyk.C,this.options.decimals)}get M(){return D(this.cmyk.M,this.options.decimals)}get Y(){return D(this.cmyk.Y,this.options.decimals)}get K(){return D(this.cmyk.K,this.options.decimals)}get HEXObject(){return lt.HEX(this.rgb)}get HEXAObject(){return lt.HEXA(this.rgb)}get RGBObject(){return {R:this.R,G:this.G,B:this.B}}get RGBAObject(){return {...this.RGBObject,A:this.A}}get HSLObject(){return {H:this.H,S:this.S,L:this.L}}get HSLAObject(){return {...this.HSLObject,A:this.A}}get CIELabObject(){return {L:this.CIEL,a:this.CIEa,b:this.CIEb}}get CIELabAObject(){return {...this.CIELabObject,A:this.A}}get CMYKObject(){return {C:this.C,M:this.M,Y:this.Y,K:this.K}}get CMYKAObject(){return {...this.CMYKObject,A:this.A}}get HEX(){return tt.HEX({R:this.R,G:this.G,B:this.B})}get HEXA(){return tt.HEX({R:this.R,G:this.G,B:this.B,A:255*this.A})}get RGB(){return tt.RGB({R:this.R,G:this.G,B:this.B},this.options)}get RGBA(){return tt.RGB({R:this.R,G:this.G,B:this.B,A:this.A},this.options)}get HSL(){return tt.HSL({H:this.H,S:this.S,L:this.L},this.options)}get HSLA(){return tt.HSL({H:this.H,S:this.S,L:this.L,A:this.A},this.options)}get CIELab(){return tt.CIELab({L:this.CIEL,a:this.CIEa,b:this.CIEb},this.options)}get CIELabA(){return tt.CIELab({L:this.CIEL,a:this.CIEa,b:this.CIEb,A:this.A},this.options)}get CMYK(){return tt.CMYK({C:this.C,M:this.M,Y:this.Y,K:this.K},this.options)}get CMYKA(){return tt.CMYK({C:this.C,M:this.M,Y:this.Y,K:this.K,A:this.A},this.options)}static toHEXObject(t){const e=At(t);return pt(t,e,0,lt.HEX)}static toHEX(t){return tt.HEX(Rt.toHEXObject(t))}static toHEXAObject(t){const e=At(t);return pt(t,e,0,lt.HEXA)}static toHEXA(t){return tt.HEX(Rt.toHEXAObject(t))}static toRGBObject(t,e={}){const s=At(t);return pt(t,s,e.decimals,lt.RGB)}static toRGB(t,e={}){const s=At(t),i=k(e,t),a=pt(t,s,e.decimals,lt.RGB);return tt.RGB(a,i)}static toRGBAObject(t,e={}){const s=At(t);return pt(t,s,e.decimals,lt.RGBA)}static toRGBA(t,e={}){const s=At(t),i=k(e,t),a=pt(t,s,e.decimals,lt.RGBA);return tt.RGB(a,i)}static toHSLObject(t,e={}){const s=At(t);return pt(t,s,e.decimals,lt.HSL)}static toHSL(t,e={}){const s=At(t),i=k(e,t),a=pt(t,s,e.decimals,lt.HSL);return tt.HSL(a,i)}static toHSLAObject(t,e={}){const s=At(t);return pt(t,s,e.decimals,lt.HSLA)}static toHSLA(t,e={}){const s=At(t),i=k(e,t),a=pt(t,s,e.decimals,lt.HSLA);return tt.HSL(a,i)}static toCIELabObject(t,e={}){const s=At(t);return pt(t,s,e.decimals,lt.CIELab)}static toCIELab(t,e={}){const s=At(t),i=k(e,t),a=pt(t,s,e.decimals,lt.CIELab);return tt.CIELab(a,i)}static toCIELabAObject(t,e={}){const s=At(t);return pt(t,s,e.decimals,lt.CIELabA)}static toCIELabA(t,e={}){const s=At(t),i=k(e,t),a=pt(t,s,e.decimals,lt.CIELabA);return tt.CIELab(a,i)}static toCMYKObject(t,e={}){const s=At(t);return pt(t,s,e.decimals,lt.CMYK)}static toCMYK(t,e={}){const s=At(t),i=k(e,t),a=pt(t,s,e.decimals,lt.CMYK);return tt.CMYK(a,i)}static toCMYKAObject(t,e={}){const s=At(t);return pt(t,s,e.decimals,lt.CMYKA)}static toCMYKA(t,e={}){const s=At(t),i=k(e,t),a=pt(t,s,e.decimals,lt.CMYKA);return tt.CMYK(a,i)}static getBlendHEXObject(t,e,s=5){return Ht(t,e,s,0,lt.HEX)}static getBlendHEX(t,e,s=5){return Rt.getBlendHEXObject(t,e,s).map((t=>tt.HEX(t)))}static getBlendHEXAObject(t,e,s=5){return Ht(t,e,s,0,lt.HEXA)}static getBlendHEXA(t,e,s=5){return Rt.getBlendHEXAObject(t,e,s).map((t=>tt.HEX(t)))}static getBlendRGBObject(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.RGB):Ht(t,e,5,s?.decimals,lt.RGB)}static getBlendRGB(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.RGB).map((s=>tt.RGB(s,k(i||{},t,e)))):Ht(t,e,5,s?.decimals,lt.RGB).map((i=>tt.RGB(i,k(s||{},t,e))))}static getBlendRGBAObject(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.RGBA):Ht(t,e,5,s?.decimals,lt.RGBA)}static getBlendRGBA(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.RGBA).map((s=>tt.RGB(s,k(i||{},t,e)))):Ht(t,e,5,s?.decimals,lt.RGBA).map((i=>tt.RGB(i,k(s||{},t,e))))}static getBlendHSLObject(t,e,s,i){return Ht(t,e,"number"==typeof s?s:5,i?.decimals,lt.HSL)}static getBlendHSL(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.HSL).map((s=>tt.HSL(s,k(i||{},t,e)))):Ht(t,e,5,s?.decimals,lt.HSL).map((i=>tt.HSL(i,k(s||{},t,e))))}static getBlendHSLAObject(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.HSLA):Ht(t,e,5,s?.decimals,lt.HSLA)}static getBlendHSLA(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.HSLA).map((s=>tt.HSL(s,k(i||{},t,e)))):Ht(t,e,5,s?.decimals,lt.HSLA).map((i=>tt.HSL(i,k(s||{},t,e))))}static getBlendCIELabObject(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.CIELab):Ht(t,e,5,s?.decimals,lt.CIELab)}static getBlendCIELab(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.CIELab).map((s=>tt.CIELab(s,k(i||{},t,e)))):Ht(t,e,5,s?.decimals,lt.CIELab).map((i=>tt.CIELab(i,k(s||{},t,e))))}static getBlendCIELabAObject(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.CIELabA):Ht(t,e,5,s?.decimals,lt.CIELabA)}static getBlendCIELabA(t,e,s,i){return "number"==typeof s?Ht(t,e,s,i?.decimals,lt.CIELabA).map((s=>tt.CIELab(s,k(i||{},t,e)))):Ht(t,e,5,s?.decimals,lt.CIELabA).map((i=>tt.CIELab(i,k(s||{},t,e))))}static getMixHEXObject(t,e=s.ADDITIVE){return bt.HEX(t,e,!1)}static getMixHEX(t,e=s.ADDITIVE){return bt.HEX(t,e,!0)}static getMixHEXAObject(t,e=s.ADDITIVE){return bt.HEXA(t,e,!1)}static getMixHEXA(t,e=s.ADDITIVE){return bt.HEXA(t,e,!0)}static getMixRGBObject(t,e,i){return "string"==typeof e?bt.RGB(t,e,!1,k(i||{},...t)):bt.RGB(t,s.ADDITIVE,!1,k(e||{},...t))}static getMixRGB(t,e,i){return "string"==typeof e?bt.RGB(t,e,!0,k(i||{},...t)):bt.RGB(t,s.ADDITIVE,!0,k(e||{},...t))}static getMixRGBAObject(t,e,i){return "string"==typeof e?bt.RGBA(t,e,!1,k(i||{},...t)):bt.RGBA(t,s.ADDITIVE,!1,k(e||{},...t))}static getMixRGBA(t,e,i){return "string"==typeof e?bt.RGBA(t,e,!0,k(i||{},...t)):bt.RGBA(t,s.ADDITIVE,!0,k(e||{},...t))}static getMixHSLObject(t,e,i){return "string"==typeof e?bt.HSL(t,e,!1,k(i||{},...t)):bt.HSL(t,s.ADDITIVE,!1,k(e||{},...t))}static getMixHSL(t,e,i){return "string"==typeof e?bt.HSL(t,e,!0,k(i||{},...t)):bt.HSL(t,s.ADDITIVE,!0,k(e||{},...t))}static getMixHSLAObject(t,e,i){return "string"==typeof e?bt.HSLA(t,e,!1,k(i||{},...t)):bt.HSLA(t,s.ADDITIVE,!1,k(e||{},...t))}static getMixHSLA(t,e,i){return "string"==typeof e?bt.HSLA(t,e,!0,k(i||{},...t)):bt.HSLA(t,s.ADDITIVE,!0,k(e||{},...t))}static getMixCIELabObject(t,e,i){return "string"==typeof e?bt.CIELab(t,e,!1,k(i||{},...t)):bt.CIELab(t,s.ADDITIVE,!1,k(e||{},...t))}static getMixCIELab(t,e,i){return "string"==typeof e?bt.CIELab(t,e,!0,k(i||{},...t)):bt.CIELab(t,s.ADDITIVE,!0,k(e||{},...t))}static getMixCIELabAObject(t,e,i){return "string"==typeof e?bt.CIELabA(t,e,!1,k(i||{},...t)):bt.CIELabA(t,s.ADDITIVE,!1,k(e||{},...t))}static getMixCIELabA(t,e,i){return "string"==typeof e?bt.CIELabA(t,e,!0,k(i||{},...t)):bt.CIELabA(t,s.ADDITIVE,!0,k(e||{},...t))}static getShades(t,e,s){return "number"==typeof e?Et(t,e,!0,k(s||{},t)):Et(t,5,!0,k(e||{},t))}static getTints(t,e,s){return "number"==typeof e?Et(t,e,!1,k(s||{},t)):Et(t,5,!1,k(e||{},t))}static getHarmony(t,i,a,r){return `${i}`in e?Ft(i,t,K(a)?a:s.ADDITIVE,k(K(a)?r||{}:a||{},t)):K(i)?Ft(e.COMPLEMENTARY,t,i,k(a||{},t)):Ft(e.COMPLEMENTARY,t,s.ADDITIVE,k(i||{},t))}}

/*
    Import
*/
/*
    Default Settings
*/
const CFG_DEFAULT = {
    keyword: "gistr",
    firststart: true,
    css_og: null,
    css_gh: null,
    theme: "Light",
    blk_pad_t: 10,
    blk_pad_b: 20,
    og_clr_bg_light: "#cbcbcb",
    og_clr_bg_dark: "#121315",
    og_clr_sb_light: "#808080",
    og_clr_sb_dark: "#363636"
};
/*
    Theme Options
*/
exports.Themes = void 0;
(function (Themes) {
    Themes["LIGHT"] = "Light";
    Themes["DARK"] = "Dark";
})(exports.Themes || (exports.Themes = {}));
const Themes_GetName = {
    [exports.Themes.LIGHT]: "Light",
    [exports.Themes.DARK]: "Dark",
};
/*
    Extend Plugin
*/
class GistrPlugin extends obsidian.Plugin {
    constructor() {
        super(...arguments);
        this.bLayoutReady = false;
    }
    /*
        Settings > Load
    */
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.loadSettings();
            this.addSettingTab(new OG_Tab_Settings(this.app, this));
            this.app.workspace.onLayoutReady(() => __awaiter(this, void 0, void 0, function* () {
                if (this.settings.firststart === true) {
                    this.settings.firststart = false;
                    this.saveSettings();
                    const actSelected = yield new ModalGettingStarted(this.plugin, this.app, true).openAndAwait();
                    if (actSelected === "settings-open") {
                        /*
                            Mute
                        */
                        // @ts-ignore
                        this.app.setting.open("${ PluginName }");
                        // @ts-ignore
                        this.app.setting.openTabById("${ PluginName }");
                    }
                }
                this.bLayoutReady = true;
            }));
            const gistBackend = new GistrBackend(this.settings);
            this.registerDomEvent(window, "message", gistBackend.messageEventHandler);
            this.registerMarkdownCodeBlockProcessor(this.settings.keyword, gistBackend.processor);
        });
    }
    /*
        Settings > Load
    */
    loadSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            this.settings = Object.assign({}, CFG_DEFAULT, yield this.loadData());
        });
    }
    /*
        Settings > Save
    */
    saveSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.saveData(this.settings);
        });
    }
}
/*
    Settings Tab
*/
class OG_Tab_Settings extends obsidian.PluginSettingTab {
    /*
        Class > Constructor
    */
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
        this.Hide_General = true;
        this.Hide_Github = true;
        this.Hide_Opengist = true;
        this.Hide_Support = false;
    }
    /*
        Display
    */
    display() {
        const { containerEl } = this;
        this.Hide_General = true;
        this.Hide_Github = true;
        this.Hide_Opengist = true;
        this.Hide_Support = false;
        this.createHeader(containerEl);
        this.createMenus(containerEl);
    }
    /*
        Section -> Header
    */
    createHeader(elm) {
        elm.empty();
        elm.createEl("h1", { text: lng("cfg_modal_title") });
        elm.createEl("p", {
            cls: "gistr-settings-section-header",
            text: lng("cfg_modal_desc"),
        });
    }
    /*
        Create Menus
    */
    createMenus(elm) {
        this.Tab_General_New(elm);
        this.Tab_General = elm.createDiv();
        this.Tab_OpenGist_New(elm);
        this.Tab_OpenGist = elm.createDiv();
        this.Tab_Github_New(elm);
        this.Tab_Github = elm.createDiv();
        this.Tab_Support_New(elm);
        this.Tab_Support = elm.createDiv();
        this.Tab_Support_ShowSettings(this.Tab_Support);
    }
    /*
        Tab > General > New
    */
    Tab_General_New(elm) {
        const Tab_GN = elm.createEl("h2", { text: lng("cfg_tab_ge_title"), cls: `gistr-settings-header${this.Hide_General ? " isfold" : ""}` });
        Tab_GN.addEventListener("click", () => {
            this.Hide_General = !this.Hide_General;
            Tab_GN.classList.toggle("isfold", this.Hide_General);
            this.Tab_General_CreateSettings();
        });
    }
    Tab_General_CreateSettings() {
        this.Tab_General.empty();
        if (this.Hide_General)
            return;
        this.Tab_General_ShowSettings(this.Tab_General);
    }
    Tab_General_ShowSettings(elm) {
        elm.createEl('small', {
            cls: "gistr-settings-section-description",
            text: lng("cfg_tab_ge_header")
        });
        /*
            Command Keyword

            changing this will cause all opengist portals to not function until the keyword is changed
            within the box.
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_ge_keyword_name"))
            .setDesc(lng("cfg_tab_ge_keyword_desc"))
            .addText(text => {
            text.setValue(this.plugin.settings.keyword.toString())
                .onChange((val) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.keyword = val;
                yield this.plugin.saveSettings();
            }));
        });
        /*
            Tab Footer Spacer
        */
        elm.createEl('div', {
            cls: "gistr-settings-section-footer",
            text: ""
        });
    }
    /*
        Tab > OpenGist > New
    */
    Tab_OpenGist_New(elm) {
        const Tab_OG = elm.createEl("h2", { text: lng("cfg_tab_og_title"), cls: `gistr-settings-header${this.Hide_Opengist ? " isfold" : ""}` });
        Tab_OG.addEventListener("click", () => {
            this.Hide_Opengist = !this.Hide_Opengist;
            Tab_OG.classList.toggle("isfold", this.Hide_Opengist);
            this.Tab_OpenGist_CreateSettings();
        });
    }
    Tab_OpenGist_CreateSettings() {
        this.Tab_OpenGist.empty();
        if (this.Hide_Opengist)
            return;
        this.Tab_OpenGist_ShowSettings(this.Tab_OpenGist);
    }
    Tab_OpenGist_ShowSettings(elm) {
        elm.createEl('small', {
            cls: "gistr-settings-section-description",
            text: lng("cfg_tab_og_header")
        });
        /*
            Development notice
        */
        const ct_Note = elm.createDiv();
        const md_notFinished = "> [!NOTE] " + lng("base_underdev_title") + "\n> <small>" + lng("base_underdev_msg") + "</small>";
        obsidian.MarkdownRenderer.render(this.plugin.app, md_notFinished, ct_Note, "" + md_notFinished, this.plugin);
        /*
            Background color (Light)
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_og_cblk_light_name"))
            .setDesc(lng("cfg_tab_og_cblk_light_desc"))
            .addColorPicker(clr => clr
            .setValue(this.plugin.settings.og_clr_bg_light)
            .onChange(val => {
            this.plugin.settings.og_clr_bg_light = val;
            this.plugin.saveSettings();
        }));
        /*
            Background color (Dark)
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_og_cblk_dark_name"))
            .setDesc(lng("cfg_tab_og_cblk_dark_desc"))
            .addColorPicker(clr => clr
            .setValue(this.plugin.settings.og_clr_bg_dark)
            .onChange(val => {
            this.plugin.settings.og_clr_bg_dark = val;
            this.plugin.saveSettings();
        }));
        /*
            Scrollbar Track Color (Light)
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_og_sb_light_name"))
            .setDesc(lng("cfg_tab_og_sb_light_desc"))
            .addColorPicker(clr => clr
            .setValue(this.plugin.settings.og_clr_sb_light)
            .onChange(val => {
            this.plugin.settings.og_clr_sb_light = val;
            this.plugin.saveSettings();
        }));
        /*
            Scrollbar Track Color (Dark)
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_og_sb_dark_name"))
            .setDesc(lng("cfg_tab_og_sb_dark_desc"))
            .addColorPicker(clr => clr
            .setValue(this.plugin.settings.og_clr_sb_dark)
            .onChange(val => {
            this.plugin.settings.og_clr_sb_dark = val;
            this.plugin.saveSettings();
        }));
        /*
            Codeblock > Padding > Top
        */
        let val_st_padding;
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_og_padding_top_name"))
            .setDesc(lng("cfg_tab_og_padding_top_desc"))
            .addSlider(slider => slider
            .setLimits(0, 30, 1)
            .setValue(this.plugin.settings.blk_pad_t)
            .onChange((val) => __awaiter(this, void 0, void 0, function* () {
            val_st_padding.innerText = " " + val.toString();
            this.plugin.settings.blk_pad_t = val;
            this.plugin.saveSettings();
        }))).settingEl.createDiv('', (el) => {
            val_st_padding = el;
            el.innerText = " " + this.plugin.settings.blk_pad_t.toString();
        }).classList.add('gistr-settings-elm-slider-preview');
        /*
            Codeblock > Padding > Bottom
        */
        let val_sb_padding;
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_og_padding_bottom_name"))
            .setDesc(lng("cfg_tab_og_padding_bottom_desc"))
            .addSlider(slider => slider
            .setLimits(0, 30, 1)
            .setValue(this.plugin.settings.blk_pad_b)
            .onChange((val) => __awaiter(this, void 0, void 0, function* () {
            val_sb_padding.innerText = " " + val.toString();
            this.plugin.settings.blk_pad_b = val;
            this.plugin.saveSettings();
        })))
            .settingEl.createDiv('', (el) => {
            val_sb_padding = el;
            el.innerText = " " + this.plugin.settings.blk_pad_b.toString();
        }).classList.add('gistr-settings-elm-slider-preview');
        /*
            Codeblock > Theme
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_og_theme_name"))
            .setDesc(lng("cfg_tab_og_theme_desc"))
            .addDropdown(dropdown => {
            dropdown
                .addOption(exports.Themes.LIGHT, Themes_GetName[exports.Themes.LIGHT])
                .addOption(exports.Themes.DARK, Themes_GetName[exports.Themes.DARK])
                .setValue(this.plugin.settings.theme)
                .onChange((val) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.theme = val;
                yield this.plugin.saveSettings();
            }));
        });
        /*
            Codeblock > CSS Override
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_og_css_name"))
            .setDesc(lng("cfg_tab_og_css_desc"))
            .addTextArea(text => text
            .setPlaceholder(lng("cfg_tab_og_css_pholder"))
            .setValue(this.plugin.settings.css_og)
            .onChange((val) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.css_og = val;
            yield this.plugin.saveSettings();
        })));
        /*
            Tab Footer Spacer
        */
        elm.createEl('div', {
            cls: "gistr-settings-section-footer",
            text: ""
        });
    }
    /*
        Tab > Github Gists > New
    */
    Tab_Github_New(elm) {
        const Tab_GH = elm.createEl("h2", { text: lng("cfg_tab_gh_title"), cls: `gistr-settings-header${this.Hide_Github ? " isfold" : ""}` });
        Tab_GH.addEventListener("click", () => {
            this.Hide_Github = !this.Hide_Github;
            Tab_GH.classList.toggle("isfold", this.Hide_Github);
            this.Tab_Github_CreateSettings();
        });
    }
    Tab_Github_CreateSettings() {
        this.Tab_Github.empty();
        if (this.Hide_Github)
            return;
        this.Tab_Github_ShowSettings(this.Tab_Github);
    }
    Tab_Github_ShowSettings(elm) {
        elm.createEl('small', {
            attr: { style: 'display: block' },
            text: lng("cfg_tab_gh_header")
        });
        /*
            Codeblock > CSS Override
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_gh_css_name"))
            .setDesc(lng("cfg_tab_gh_css_desc"))
            .addTextArea(text => text
            .setPlaceholder(lng("cfg_tab_gh_css_pholder"))
            .setValue(this.plugin.settings.css_gh)
            .onChange((val) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.css_gh = val;
            yield this.plugin.saveSettings();
        })));
        /*
            Tab Footer Spacer
        */
        elm.createEl('div', {
            cls: "gistr-settings-section-footer",
            text: ""
        });
    }
    /*
        Tab > Support > New
    */
    Tab_Support_New(elm) {
        const tab_og = elm.createEl("h2", { text: lng("cfg_tab_sp_title"), cls: `gistr-settings-header${this.Hide_Support ? " isfold" : ""}` });
        tab_og.addEventListener("click", () => {
            this.Hide_Support = !this.Hide_Support;
            tab_og.classList.toggle("isfold", this.Hide_Support);
            this.Tab_Support_CreateSettings();
        });
    }
    Tab_Support_CreateSettings() {
        this.Tab_Support.empty();
        if (this.Hide_Support)
            return;
        this.Tab_Support_ShowSettings(this.Tab_Support);
    }
    Tab_Support_ShowSettings(elm) {
        /*
            Section -> Support Buttons
        */
        elm.createEl('small', {
            cls: "gistr-settings-section-description",
            text: lng("cfg_tab_su_desc")
        });
        /*
            Button > Getting Started > Open Interface
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_su_gs_name"))
            .setDesc(lng("cfg_tab_su_gs_desc"))
            .addButton(btn => {
            btn.setButtonText(lng("cfg_tab_su_gs_btn"))
                .setCta()
                .onClick(() => __awaiter(this, void 0, void 0, function* () {
                yield new ModalGettingStarted(this.plugin, this.app, false).openAndAwait();
            }));
        });
        /*
            Button -> Plugin Repo
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_su_repo_label"))
            .setDesc(lng("cfg_tab_su_repo_url"))
            .addButton((btn) => {
            btn.setButtonText(lng("cfg_tab_su_repo_btn")).onClick(() => {
                window.open(lng("cfg_tab_su_repo_url"));
            });
        });
        /*
            Button -> OpenGist > Download
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_su_ogrepo_label"))
            .setDesc(lng("cfg_tab_su_ogrepo_url"))
            .addButton((btn) => {
            btn.setButtonText(lng("cfg_tab_su_ogrepo_btn")).onClick(() => {
                window.open(lng("cfg_tab_su_ogrepo_url"));
            });
        });
        /*
            Button -> OpenGist > Docs
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_su_ogdocs_label"))
            .setDesc(lng("cfg_tab_su_ogdocs_url"))
            .addButton((btn) => {
            btn.setButtonText(lng("cfg_tab_su_ogdocs_btn")).onClick(() => {
                window.open(lng("cfg_tab_su_ogdocs_url"));
            });
        });
        /*
            Button -> OpenGist > Docs
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_su_ogdemo_label"))
            .setDesc(lng("cfg_tab_su_ogdemo_url"))
            .addButton((btn) => {
            btn.setButtonText(lng("cfg_tab_su_ogdemo_btn")).onClick(() => {
                window.open(lng("cfg_tab_su_ogdemo_url"));
            });
        });
        /*
            Button -> Github Gist
        */
        new obsidian.Setting(elm)
            .setName(lng("cfg_tab_su_gist_label"))
            .setDesc(lng("cfg_tab_su_gist_url"))
            .addButton((btn) => {
            btn.setButtonText(lng("cfg_tab_su_gist_btn")).onClick(() => {
                window.open(lng("cfg_tab_su_gist_url"));
            });
        });
        /*
            Button -> Donate
        */
        const div_Donate = elm.createDiv({ cls: "gistr-donate" });
        const lnk_Donate = new DocumentFragment();
        lnk_Donate.append(obsidian.sanitizeHTMLToDom(`
                    <a href="https://buymeacoffee.com/aetherinox">
                    <img alt="" src="https://img.buymeacoffee.com/button-api/?text=Donate Java&emoji=🤓&slug=aetherinox&button_colour=e8115c&font_colour=ffffff&font_family=Lato&outline_colour=000000&coffee_colour=FFDD00"/>
                    </a>
                `));
        new obsidian.Setting(div_Donate).setDesc(lnk_Donate);
    }
}
/*
    Calculate colors when converting hsl and rgb
*/
function CalcColor(str) {
    const strSplit = str.trim().replace(/(\d*)%/g, "$1").split(" ");
    const operators = {
        "+": (n1, n2) => Math.max(n1 + n2, 0),
        "-": (n1, n2) => Math.max(n1 - n2, 0),
    };
    if (strSplit.length === 3) {
        if (strSplit[1] in operators) {
            console.log(operators);
            return `${operators[strSplit[1]](parseFloat(strSplit[0]), parseFloat(strSplit[2]))}%`;
        }
    }
    return str;
}
/*
    CSS > Get Value
*/
function CSS_GetValue(property) {
    const value = window.getComputedStyle(document.body).getPropertyValue(property).trim();
    /*
        type    : hex
                  #ff0000
    */
    if (typeof value === "string" && value.startsWith("#"))
        return `#${value.trim().substring(1)}`;
    /*
        type    : hsl
                  hsl( 0, 100%, 50% )
    */
    else if (value.startsWith("hsl"))
        return `#${Rt.toHEXA(value.replace(/CalcColor\((.*?)\)/g, (match, capture) => CalcColor(capture))).substring(1)}`;
    /*
        type    : rgb
                  rgb( 255, 0, 0 )
    */
    else if (value.startsWith("rgb"))
        return `#${Rt.toHEXA(value.replace(/CalcColor\((.*?)\)/g, (match, capture) => CalcColor(capture))).substring(1)}`;
    /*
        Unknown type
    */
    else
        console.warn(`Gistr: Unknown color format - ${value}`);
    return `#${Rt.toHEXA(value).substring(1)}`;
}
/*
    Get Color from CSS Value
*/
function GetColor(clr) {
    return bValidCSS(clr) ? CSS_GetValue(clr) : clr;
}
/*
    Check Valid CSS
*/
function bValidCSS(css) {
    return typeof css === "string" && css.startsWith("--");
}

exports.GetColor = GetColor;
exports.Themes_GetName = Themes_GetName;
exports.bValidCSS = bValidCSS;
exports["default"] = GistrPlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
