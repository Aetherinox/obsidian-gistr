# ---------------------------------------------------------------------------------------
#   @parent     : github workflow
#   @desc       : allows you to auto assign labels to new issues and pull requests
#   @author     : Aetherinox
#   @url        : https://github.com/Aetherinox
#
#   requires the following labels to be created in your repo:
#     - bug
#     - feature
#     - urgent
#     - roadmap
# ---------------------------------------------------------------------------------------

name: "Issues: Assign Label"
run-name: "New Issue: Assign Label - ${{ github.event.issue.number }}: ${{ github.event.issue.title }}"

on:
  issues:
    types:
      - reopened
      - opened

env:
  LABEL_BUG:      Bug
  LABEL_FEATURE:  Feature
  LABEL_URGENT:   Urgent
  LABEL_ROADMAP:  Roadmap
  ASSIGN_USER:    Aetherinox
  BOT_NAME_1:     AdminServ
  BOT_NAME_2:     AdminServX
  LABELS_JSON: |
    [
      { "name": "Bug", "color": "d73a4a", "description": "Something isn't working" },
      { "name": "Feature", "color": "36552B", "description": "Feature request" },
      { "name": "Urgent", "color": "ccb11d", "description": "This issue required priority." },
      { "name": "Roadmap", "color": "8F1784", "description": "Feature or bug currently planned for implementation." }
    ]


jobs:

  # ---------------------------------------------------------------------------------------
  #   Verify Existing Labels
  #   This job will ensure you have labels already created in your repo.
  #
  #   All labels come from the JSON table LABELS_JSON.
  # ---------------------------------------------------------------------------------------

  Submission_Labels_Verify:
    name: "Labels: Verify"
    runs-on: ubuntu-latest
    permissions: write-all
    steps:

      - name: Verify Existing Labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = JSON.parse( process.env.LABELS_JSON );
            for ( const label of labels )
            {
                try
                {
                    await github.rest.issues.createLabel(
                    {
                        owner:        context.repo.owner,
                        repo:         context.repo.repo,
                        name:         label.name,
                        description:  label.description || '',
                        color:        label.color
                    });
                }
                catch ( err )
                {
                    // label already exists
                    if ( err.status === 422 )
                    {
                        console.log( `Label '${label.name}' already exists. Skipping.` );
                    }
                    else
                    {
                        // Log other errors
                        console.error( `Error creating label '${label.name}': ${err}` );
                    }
                }
            }

  # ---------------------------------------------------------------------------------------
  #   Check Label: BUG
  #
  #   check issue title and body for specific terms and assign label
  # ---------------------------------------------------------------------------------------

  Submission-Buy-Label-Check:
    name:  "[ Bugs ]: Check Label"
    runs-on: ubuntu-latest
    permissions: write-all
    steps:

      # ---------------------------------------------------------------------------------------
      #   get issue title & body, convert to lowercase to match
      # ---------------------------------------------------------------------------------------

      - name: ${{ env.LABEL_BUG }} [ Title ] - String Manipulation
        id: bug_title
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.event.issue.title }}

      - name: ${{ env.LABEL_BUG }} [ Body ] - String Manipulation
        id: bug_body
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.event.issue.body }}

      # ---------------------------------------------------------------------------------------
      #   Check Title
      #
      #   this job checks to see if a new issue has certain keywords in the title and body
      #   and also if the beginning of the title starts with "bug"
      #
      #   if not, re-name the issue in the format of
      #       Bug: Title Name
      # ---------------------------------------------------------------------------------------

      - name: ${{ env.LABEL_BUG }} [ Title ] - Rename"
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.bug_title.outputs.lowercase, 'bug' ) ||
          contains( steps.bug_title.outputs.lowercase, 'issue' ) ||
          contains( steps.bug_title.outputs.lowercase, 'broke' ) ||
          contains( steps.bug_title.outputs.lowercase, 'fails' ) ||
          contains( steps.bug_title.outputs.lowercase, 'failed' ) &&
          ( !startsWith( steps.bug_title.outputs.lowercase, 'bug' ) ) )
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          title: "${{ env.LABEL_BUG }}: ${{ github.event.issue.title }}"

      # Check Submission TITLE to assign "BUG" label

      - name: ${{ env.LABEL_BUG }} [ Title ] - Check"
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.bug_title.outputs.lowercase, 'bug' ) ||
          contains( steps.bug_title.outputs.lowercase, 'issue' ) ||
          contains( steps.bug_title.outputs.lowercase, 'broke' ) ||
          contains( steps.bug_title.outputs.lowercase, 'fails' ) ||
          contains( steps.bug_title.outputs.lowercase, 'failed' ) )
        run: gh issue edit "$NUMBER" --add-label "$LABELS"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          LABELS: ${{ env.LABEL_BUG }}

      # Check Submission BODY to assign "BUG" label

      - name: ${{ env.LABEL_BUG }} [ Body ] - Check
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.bug_body.outputs.lowercase, 'bug' ) ||
          contains( steps.bug_body.outputs.lowercase, 'broke' ) ||
          contains( steps.bug_body.outputs.lowercase, 'fails' ) ||
          contains( steps.bug_body.outputs.lowercase, 'failed' ) )
        run: gh issue edit "$NUMBER" --add-label "$LABELS"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          LABELS: ${{ env.LABEL_BUG }}

  # ---------------------------------------------------------------------------------------
  #   Check Label: Feature
  #
  #   check issue title and body for specific terms and assign label
  # ---------------------------------------------------------------------------------------

  Submission-Feature-Label-Check:
    name:  "[ Feature ]: Check Label"
    runs-on: ubuntu-latest
    permissions: write-all
    steps:

      # ---------------------------------------------------------------------------------------
      #   get issue title & body, convert to lowercase to match
      # ---------------------------------------------------------------------------------------

      - name: ${{ env.LABEL_FEATURE }} [ Title ] - String Manipulation
        id: feature_title
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.event.issue.title }}

      - name: ${{ env.LABEL_FEATURE }} [ Body ] - String Manipulation
        id: feature_body
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.event.issue.body }}

      # ---------------------------------------------------------------------------------------
      #   Check Title
      #
      #   this job checks to see if a new issue has certain keywords in the title and body
      #   and also if the beginning of the title starts with "bug"
      #
      #   if not, re-name the issue in the format of
      #       Bug: Title Name
      # ---------------------------------------------------------------------------------------

      - name: ${{ env.LABEL_FEATURE }} [ Title ] - Rename"
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.feature_title.outputs.lowercase, 'feature' ) ||
          contains( steps.feature_title.outputs.lowercase, 'new' ) ||
          contains( steps.feature_title.outputs.lowercase, 'add support' ) ||
          contains( steps.feature_title.outputs.lowercase, 'request' ) &&
          ( !startsWith( steps.feature_title.outputs.lowercase, 'feature' ) ) )
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          title: "${{ env.LABEL_FEATURE }}: ${{ github.event.issue.title }}"

      # Check Submission TITLE to assign "FEATURE" label

      - name: ${{ env.LABEL_FEATURE }} [ Title ] - Check
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.feature_title.outputs.lowercase, 'feature' ) ||
          contains( steps.feature_title.outputs.lowercase, 'new' ) ||
          contains( steps.feature_title.outputs.lowercase, 'add support' ) ||
          contains( steps.feature_title.outputs.lowercase, 'request' ) )
        run: gh issue edit "$NUMBER" --add-label "$LABELS"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          LABELS: ${{ env.LABEL_FEATURE }}

      # Check Submission BODY to assign "FEATURE" label

      - name: ${{ env.LABEL_FEATURE }} [ Body ] - Check
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.feature_body.outputs.lowercase, 'feature' ) ||
          contains( steps.feature_body.outputs.lowercase, 'new idea' ) ||
          contains( steps.feature_body.outputs.lowercase, 'can you add' ) ||
          contains( steps.feature_body.outputs.lowercase, 'add support' ) ||
          contains( steps.feature_body.outputs.lowercase, 'to support this' ) ||
          contains( steps.feature_body.outputs.lowercase, 'request' ) )
        run: gh issue edit "$NUMBER" --add-label "$LABELS"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          LABELS: ${{ env.LABEL_FEATURE }}

  # ---------------------------------------------------------------------------------------
  #   Check Label: Urgent
  #
  #   check issue title and body for specific terms and assign label
  # ---------------------------------------------------------------------------------------

  Submission-Urgent-Label-Check:
    name:  "[ Urgent ]: Check Label"
    runs-on: ubuntu-latest
    permissions: write-all
    steps:

      # ---------------------------------------------------------------------------------------
      #   get issue title & body, convert to lowercase to match
      # ---------------------------------------------------------------------------------------

      - name: ${{ env.LABEL_URGENT }} [ Title ] - String Manipulation
        id: urgent_title
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.event.issue.title }}

      - name: ${{ env.LABEL_URGENT }} [ Body ] - String Manipulation
        id: urgent_body
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.event.issue.body }}

      # Check Submission TITLE to assign "URGENT" label

      - name: ${{ env.LABEL_URGENT }} [ Title ] - Check
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.urgent_title.outputs.lowercase, 'urgent' ) ||
          contains( steps.urgent_title.outputs.lowercase, 'emergency' ) ||
          contains( steps.urgent_title.outputs.lowercase, 'important' ) )
        run: gh issue edit "$NUMBER" --add-label "$LABELS"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          LABELS: ${{ env.LABEL_URGENT }}

      # Check Submission BODY to assign "URGENT" label

      - name: ${{ env.LABEL_URGENT }} [ Body ] - Check
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.urgent_body.outputs.lowercase, 'urgent' ) ||
          contains( steps.urgent_body.outputs.lowercase, 'emergency' ) ||
          contains( steps.urgent_body.outputs.lowercase, 'important' ) )
        run: gh issue edit "$NUMBER" --add-label "$LABELS"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          LABELS: ${{ env.LABEL_URGENT }}

  # ---------------------------------------------------------------------------------------
  #   Check Label: Roadmap
  #
  #   check issue title and body for specific terms and assign label
  # ---------------------------------------------------------------------------------------

  Submission-Roadmap-Label-Check:
    name:  "[ Roadmap ]: Check Label"
    runs-on: ubuntu-latest
    permissions: write-all
    steps:

      # ---------------------------------------------------------------------------------------
      #   get issue title & body, convert to lowercase to match
      # ---------------------------------------------------------------------------------------

      - name: ${{ env.LABEL_ROADMAP }} [ Title ] - String Manipulation
        id: roadmap_title
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.event.issue.title }}

      - name: ${{ env.LABEL_ROADMAP }} [ Body ] - String Manipulation
        id: roadmap_body
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.event.issue.body }}

      # ---------------------------------------------------------------------------------------
      #   Check Title
      #
      #   this job checks to see if a new issue has certain keywords in the title and body
      #   and also if the beginning of the title starts with "bug"
      #
      #   if not, re-name the issue in the format of
      #       Bug: Title Name
      # ---------------------------------------------------------------------------------------

      - name: ${{ env.LABEL_ROADMAP }} [ Title ] - Rename"
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.roadmap_title.outputs.lowercase, 'roadmap' ) ||
          contains( steps.roadmap_title.outputs.lowercase, 'road map' ) ||
          contains( steps.roadmap_title.outputs.lowercase, 'planned' ) &&
          ( !startsWith( steps.roadmap_title.outputs.lowercase, 'roadmap' ) ) )
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          title: "${{ env.LABEL_ROADMAP }}: ${{ github.event.issue.title }}"

      # Check Submission TITLE to assign "ROADMAP" label

      - name: ${{ env.LABEL_ROADMAP }} [ Title ] - Check
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.roadmap_title.outputs.lowercase, 'roadmap' ) ||
          contains( steps.roadmap_title.outputs.lowercase, 'road map' ) ||
          contains( steps.roadmap_title.outputs.lowercase, 'planned' ) )
        run: gh issue edit "$NUMBER" --add-label "$LABELS"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          LABELS: ${{ env.LABEL_ROADMAP }}

      # Check Submission BODY to assign "ROADMAP" label

      - name: ${{ env.LABEL_ROADMAP }} [ Body ] - Check
        if: |
          github.event.issue &&
          github.event.issue.user.login != '$env.BOT_NAME_1' &&
          github.event.issue.user.login != '$env.BOT_NAME_2' &&
          ( contains( steps.roadmap_body.outputs.lowercase, 'roadmap' ) ||
          contains( steps.roadmap_body.outputs.lowercase, 'road map' ) ||
          contains( steps.roadmap_body.outputs.lowercase, 'planned' ) )
        run: gh issue edit "$NUMBER" --add-label "$LABELS"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          LABELS: ${{ env.LABEL_ROADMAP }}

  # ----------------------------------------
  #   Assign
  # ----------------------------------------

  Assign-Submission:
    name: "Assign Issue"
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: "Add Assignee"
        run: gh issue edit "$NUMBER" --add-assignee "$ASSIGNEE"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          ASSIGNEE: ${{ env.ASSIGN_USER }}
